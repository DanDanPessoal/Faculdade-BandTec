* be breaking changes between
`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be
additive (but non-breaking), according to commonly observed practices.

* `^1.2.3` := `>=1.2.3 <2.0.0`
* `^0.2.3` := `>=0.2.3 <0.3.0`
* `^0.0.3` := `>=0.0.3 <0.0.4`
* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0` Note that prereleases in
  the `1.2.3` version will be allowed, if they are greater than or
  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but
  `1.2.4-beta.2` would not, because it is a prerelease of a
  different `[major, minor, patch]` tuple.
* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4`  Note that prereleases in the
  `0.0.3` version *only* will be allowed, if they are greater than or
  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.

When parsing caret ranges, a missing `patch` value desugars to the
number `0`, but will allow flexibility within that value, even if the
major and minor versions are both `0`.

* `^1.2.x` := `>=1.2.0 <2.0.0`
* `^0.0.x` := `>=0.0.0 <0.1.0`
* `^0.0` := `>=0.0.0 <0.1.0`

A missing `minor` and `patch` values will desugar to zero, but also
allow flexibility within those values, even if the major version is
zero.

* `^1.x` := `>=1.0.0 <2.0.0`
* `^0.x` := `>=0.0.0 <1.0.0`

### Range Grammar

Putting all this together, here is a Backus-Naur grammar for ranges,
for the benefit of parser authors:

```bnf
range-set  ::= range ( logical-or range ) *
logical-or ::= ( ' ' ) * '||' ( ' ' ) *
range      ::= hyphen | simple ( ' ' simple ) * | ''
hyphen     ::= partial ' - ' partial
simple     ::= primitive | partial | tilde | caret
primitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial
partial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?
xr         ::= 'x' | 'X' | '*' | nr
nr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *
tilde      ::= '~' partial
caret      ::= '^' partial
qualifier  ::= ( '-' pre )? ( '+' build )?
pre        ::= parts
build      ::= parts
parts      ::= part ( '.' part ) *
part       ::= nr | [-0-9A-Za-z]+
```

## Functions

All methods and classes take a final `options` object argument.  All
options in this object are `false` by default.  The options supported
are:

- `loose`  Be more forgiving about not-quite-valid semver strings.
  (Any resulting output will always be 100% strict compliant, of
  course.)  For backwards compatibility reasons, if the `options`
  argument is a boolean value instead of an object, it is interpreted
  to be the `loose` param.
- `includePrerelease`  Set to suppress the [default
  behavior](https://github.com/npm/node-semver#prerelease-tags) of
  excluding prerelease tagged versions from ranges unless they are
  explicitly opted into.

Strict-mode Comparators and Ranges will be strict about the SemVer
strings that they parse.

* `valid(v)`: Return the parsed version, or null if it's not valid.
* `inc(v, release)`: Return the version incremented by the release
  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,
  `prepatch`, or `prerelease`), or null if it's not valid
  * `premajor` in one call will bump the version up to the next major
    version and down to a prerelease of that major version.
    `preminor`, and `prepatch` work the same way.
  * If called from a non-prerelease version, the `prerelease` will work the
    same as `prepatch`. It increments the patch version, then makes a
    prerelease. If the input version is already a prerelease it simply
    increments it.
* `prerelease(v)`: Returns an array of prerelease components, or null
  if none exist. Example: `prerelease('1.2.3-alpha.1') -> ['alpha', 1]`
* `major(v)`: Return the major version number.
* `minor(v)`: Return the minor version number.
* `patch(v)`: Return the patch version number.
* `intersects(r1, r2, loose)`: Return true if the two supplied ranges
  or comparators intersect.
* `parse(v)`: Attempt to parse a string as a semantic version, returning either
  a `SemVer` object or `null`.

### Comparison

* `gt(v1, v2)`: `v1 > v2`
* `gte(v1, v2)`: `v1 >= v2`
* `lt(v1, v2)`: `v1 < v2`
* `lte(v1, v2)`: `v1 <= v2`
* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,
  even if they're not the exact same string.  You already know how to
  compare strings.
* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.
* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call
  the corresponding function above.  `"==="` and `"!=="` do simple
  string comparison, but are included for completeness.  Throws if an
  invalid comparison string is provided.
* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if
  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.
* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions
  in descending order when passed to `Array.sort()`.
* `compareBuild(v1, v2)`: The same as `compare` but considers `build` when two versions
  are equal.  Sorts in ascending order if passed to `Array.sort()`.
  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.
* `diff(v1, v2)`: Returns difference between two versions by the release type
  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),
  or null if the versions are the same.

### Comparators

* `intersects(comparator)`: Return true if the comparators intersect

### Ranges

* `validRange(range)`: Return the valid range or null if it's not valid
* `satisfies(version, range)`: Return true if the version satisfies the
  range.
* `maxSatisfying(versions, range)`: Return the highest version in the list
  that satisfies the range, or `null` if none of them do.
* `minSatisfying(versions, range)`: Return the lowest version in the list
  that satisfies the range, or `null` if none of them do.
* `minVersion(range)`: Return the lowest version that can possibly match
  the given range.
* `gtr(version, range)`: Return `true` if version is greater than all the
  versions possible in the range.
* `ltr(version, range)`: Return `true` if version is less than all the
  versions possible in the range.
* `outside(version, range, hilo)`: Return true if the version is outside
  the bounds of the range in either the high or low direction.  The
  `hilo` argument must be either the string `'>'` or `'<'`.  (This is
  the function called by `gtr` and `ltr`.)
* `intersects(range)`: Return true if any of the ranges comparators intersect

Note that, since ranges may be non-contiguous, a version might not be
greater than a range, less than a range, *or* satisfy a range!  For
example, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`
until `2.0.0`, so the version `1.2.10` would not be greater than the
range (because `2.0.1` satisfies, which is higher), nor less than the
range (since `1.2.8` satisfies, which is lower), and it also does not
satisfy the range.

If you want to know if a version satisfies or does not satisfy a
range, use the `satisfies(version, range)` function.

### Coercion

* `coerce(version, options)`: Coerces a string to semver if possible

This aims to provide a very forgiving translation of a non-semver string to
semver. It looks for the first digit in a string, and consumes all
remaining characters which satisfy at least a partial semver (e.g., `1`,
`1.2`, `1.2.3`) up to the max permitted length (256 characters).  Longer
versions are simply truncated (`4.6.3.9.2-alpha2` becomes `4.6.3`).  All
surrounding text is simply ignored (`v3.4 replaces v3.3.1` becomes
`3.4.0`).  Only text which lacks digits will fail coercion (`version one`
is not valid).  The maximum  length for any semver component considered for
coercion is 16 characters; longer components will be ignored
(`10000000000000000.4.7.4` becomes `4.7.4`).  The maximum value for any
semver component is `Integer.MAX_SAFE_INTEGER || (2**53 - 1)`; higher value
components are invalid (`9999999999999999.4.7.4` is likely invalid).

If the `options.rtl` flag is set, then `coerce` will return the right-most
coercible tuple that does not share an ending index with a longer coercible
tuple.  For example, `1.2.3.4` will return `2.3.4` in rtl mode, not
`4.0.0`.  `1.2.3/4` will return `4.0.0`, because the `4` is not a part of
any other overlapping SemVer tuple.

### Clean

* `clean(version)`: Clean a string to be a valid semver if possible

This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges. 

ex.
* `s.clean(' = v 2.1.5foo')`: `null`
* `s.clean(' = v 2.1.5foo', { loose: true })`: `'2.1.5-foo'`
* `s.clean(' = v 2.1.5-foo')`: `null`
* `s.clean(' = v 2.1.5-foo', { loose: true })`: `'2.1.5-foo'`
* `s.clean('=v2.1.5')`: `'2.1.5'`
* `s.clean('  =v2.1.5')`: `2.1.5`
* `s.clean('      2.1.5   ')`: `'2.1.5'`
* `s.clean('~1.0.0')`: `null`
                                                                                                                                                                                                                                                                                                                                                                                                                                                  ¿"p
ËıÛ†""õTUÒC≠;à}o˚ÆÃ÷î◊2Áhﬁæü∆¡][µZx≠™UÂ‘Ãd|?ÅÚy3ö˜“∏}/Ê∂Ì˘¸z‡+ßÁ¶¯ó≥ágkùQYÒ‘Ã‰8J-rå<xóƒW;|`znzºﬂ÷π≠\mÁVDD∂≠ó(ªB‘åºó≤ö“ÿï
‚º”Iä*ﬂ∂R6ÄÖÄÂ∞<ú∞º˜wÄóQ@,"[KUƒ’®kÏÏÄ∏Ã÷î◊äÜ[å<rç€vo˜px’@¥™úöôºã¢b¯ˇ¢ƒpÿ5RF∫áÊù˚∂s8ºj¯Á¿ÔLœMﬂYÁF*	àßf&˜øºg≥kY1Ú–=ƒc[≤«H’ﬁCqâA©S…oFÁ∂o˙~nEDd[;Oñ√pF»=°”√jäe]ID∑ôbÿJ_‚-ÙÉÑÅÀ=¡†=⁄†◊J0¿|__œKø6≤~TDdìÓ{ÏsèUqΩyeq‘‹πqô≠)Ø’8∞ó—áÔŸ©Øom≠*ßf&øíbr©ΩtìâQFπoªµYãGÅOOœMi](= ûöô‹¸.∆ÕÆµ FC€¶œHﬁ¸ÓÙ‹ÙÆ™§s€w};∑""≤Ìù^§¨ÊfòÙrÚn∑®÷©•¬#`!–oíßQ—á8l≠b3Ë•‰ç˛∑Í .R¸˙®ßô¥à»∆8™	s+ÎÌÍv`Ä953ôNÕL˛cî\5åC˜›IÎÆ˝;•j¯FV[U˛ÃÙ‹t_~ëMÕL˛ˇÄˇLîπn„‡^Ü'aQ_∆•¢]¿oNœMˇOuº‘W˝—˜=ÿ~x˝f◊2gO⁄©À÷Îı¿ØLœMWñ∂ÆÙ
“πÌø œ≠ààÏKm& ù#‰ﬂÈB†Æ ]óñ«[dçh•ÇxÎfò3⁄√	›V—"∫œŸÁ)⁄L‹LLô}ED Qj5Í‘Ã‰äÄ¶t«;.Ù*≥5Âµ,äy›=§{∆ ^z+´ºUÂ‘Ã§MÕL˛c‡_Prûÿ:tê÷°˝e.πUE¿øûûõ˛·~∏¥˙Ë˚4‡}îT^>tÔƒ#Ce,µSºxﬂÙ‹tÈ?ùMÕLÍ‹÷´≤s+"";F<SÍä8Ì‰û:&√≈aóFS≤ƒaaã%ƒ∂⁄&#¶3⁄ èåb˙__wÒ0ã˚$¿Hˆ""≤e™´p@›Œ*é*≥5Âµ,ây¯‚Q}nyU∑™¸¿ﬂ/{—÷›∑”8∏ªÏe∑∫úûõ˛ß˝<`ôâˇﬂæ±åÖö∑Ì%Ÿ≠OÇ6‡)ŒCŸtnÎW’πëù¡OSfüŸ@1®Æ€!d¨ˇïQpﬁ”NÈµÄm©!@îgÙö1ÀcM|Ï˙›Ë°ú∫∑∏_õ¢Öà» )ªümuÍö;' .≥5Âµ,.*áwZ‡æNï¥™úöô¸‡˚ \ä ·∆˛â≤ó›.˛n?+âKy'ˇË˚|¯«e¨è”ºSeÂõèßÁ¶-k±©ô…G—π•û[ŸQr‡8E XsﬂÓ‚Ûºæˆ>–JÈé4Œ’Q»ºq.ÛÙ“à•ëÔËw¿}8Ùnqø∞Ü˚ààÙ[Ÿƒïıﬁ)‘ lMy-sé·…ªàZ;„µ‹§R[UNÕL~˜ XÎjç˝{T9|k?8=7˝ù˝8–¶‚Gﬂ˜‡E˚ÅMØeQƒ–}∑ovôùŒQ¥#òÿÏBS3ìË‹í“Œ≠ààÏ8Å¢RÙV≠÷«åêyB∑Wî√ˆõÅÀ=›4¢=î`÷˜ÄusÚÄÂÅŒPBw(s8ﬂ◊)Ü*¸ë≠Ë¡ÈπÈ∏ƒı4†n nMy≠°˚Ó$Q[âu(•UÂ‘Ã‰{Ä/gKØà«Fi›u†Ïe∑´üúûõû™˙ eTˇ?¿°÷°u◊\ZÀÙÊÌÊ≈yŸ,ù€¡S÷πëùÁB©+‡yß¶Äp9ÙéÂëÔä°o5ÕÀ[É»ÃùÒ›f
˝áŒRÙ Œ˚zTër$¿%Æ7Y‚ZØ≤bJlMy≠ÊÌ˚Iv©˛l™UÂ‘Ã‰Ì¿°úVó&ﬂ˚÷xø6‡øLœM¨Ú õ
à}ﬂÉÔ˛JâGáH˜Nî±î˛ Ù‹Ùª7˙‡©ôIù€¡µ©s+"";Vxûª‹öÅ˜9yªﬁjy£øZ1º<—$O¢-SAÃäja†=íí5‚W¬·˛ΩégWn""[U)ÉÂ¶f&#™
àÕà€ªX™Ã÷î◊ä«Fhﬁ±∑ä•wäµ™\©ˇY†ÙÅwC˜›â≈•fŒ;¡A`f≥·7≥·Ä¯—˜=?Q .ZwﬂV RÚ*?1=7ΩÓﬂu+9Í‹∂ù[Ÿ—2ä
‚Ú∆†Y
˚nó‡Î)Bµp9,Ì"K"¨øCﬁ6≈rOp∆ÚhÉ¨„BËw¿}XÏÁEDJˆHIÎ‹TRÊÎ“î˙ıWØÃ÷î◊≤8bË^µ™‹§ç∂™¸‡K ﬁL„¿^‚Qµ
Ÿ†Ø ˛ZUãoÊ7wP“∆Èﬁ	M°¨∆#ÁiΩæù€A∑—s+"";W<EôMÇafÑNè‡uîªP¥eXMÒ±√y_W∑ãusôß€Lhè6Òë√y˙Ÿb¢K—^¢›∑#äàîØ¨Au’®€˛?ó÷öÚZ≠ªn√•e∂ôﬁ±÷’™rjfÚœ ﬁÑKSöw™|ì˛˘Ù‹t%üöl( ~Ù}¶¿ó≤3öwÏ/e)πÆûûõ^Û'°S3ì:∑[«∫Œ≠ààÏx9$•VˇÁóªê◊î ÔãAo√I1∏nƒ!Ä˘@Øï–IFø˚8_NS≈""[’·í÷—Ä∫(≥5Âµ‚±“=cU,ΩS≠ßUÂè√eo†u◊Ãï^hæ”åRúü“mÙÃ¸U†îƒ∫±oóË°
›Nqæ÷JÁvÎXÔπëù-PTå^,uUÉêıΩuT{É8ÀÈ5cñ«[Eoﬂ‹¸‡3p>–k∆¥GíïwÂ}∞w	xƒ"≤µ=4=7]F‚TŸÄ∫hõƒ•∂¶ºñ≠ª+ù«µS›≤UÂ‘Ã‰;Åo*˚¿ÒË0…Æ—≤ó›©æezn˙Ìe/∫Ó?HWzˇ@)G7h‹S RrS?∞ñø4W˛Ä◊π›Z÷tnEDDV\û-uEÁﬁìw:‘Rbeû,çXIã \∂@@Ï=ù°ÑŒPf˝ﬁÚäƒ[®k≥à»k¥(˙oVY≠*^√5∑mãâÔ†º–ØíÓ€µmÉıö≠•Ue%√õwÍÍÚí˝HŸn‰m¸◊ ˜ïqd|◊–o˙>∏è‚º›äŒÌ÷≥÷s+""∞D1®Æ¥^Ê¡ÚN}Ö®ñC;:£|m'9!v‡ºåÓhì¨ôg§øQÌ•ïõà»VWFHYY±k$U-]õR[S^ÀåÊÌÍS[°∂™úöô|0Uˆ„±Q‚¶+Ÿ{˚‹ckm≤&	àøß¨É7ˆÔ*k)πµµú7ù€≠©¥Û&""€^ºHŸ}àΩ«∑ªx_cÛﬂ À„MÚ4∆<ÑûT∞b –NÈ6cÅ~N®£Ë?|πü©»Cõy‘Ã‰Y3Á∂Îêµ“ZS^´±∑ZUVÎf≠*ˇ◊*ÿºMWóW§‘ÛµÆÄ¯—˜=x'Â•8Mà«G XJ÷Ê+¶Á¶Ôº—7ßf&un∑Æõû[ë´‰¿sAqiút∫–À©£r◊¨®"^k–kF8Ôπ~∏êBd¥Gzâ£àç˚wt‡∞–øCäàTf≥ƒ’Uo√ˆ•∂¶ºñçª+YZ^Â5≠*ßf&_|eŸäÜZƒcCe/+Ö˜>ˆπ«6ıŸ’÷[A¸≠îÙÆ?Ÿ3^∆2≤vFq˛nDÁvÎ∫’πYï«)s0Y ¢à|πáœÚçè@ﬁÙ>À√∫Õ|ﬂ´q◊'@î{≤fÃÚX9\N?[LÃSTk@ùàlá7˘¯KŸ≈uD≠ÌSbk k%c€≤%« ∫^´ Ô™‚@È>]]^±øY÷BÎ≠€ˇÊ≤úÓ+k©{
  "_from": "semver@^6.2.0",
  "_id": "semver@6.3.0",
  "_inBundle": false,
  "_integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
  "_location": "/package-json/semver",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "semver@^6.2.0",
    "name": "semver",
    "escapedName": "semver",
    "rawSpec": "^6.2.0",
    "saveSpec": null,
    "fetchSpec": "^6.2.0"
  },
  "_requiredBy": [
    "/package-json"
  ],
  "_resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
  "_shasum": "ee0a64c8af5e8ceea67687b133761e1becbd1d3d",
  "_spec": "semver@^6.2.0",
  "_where": "D:\\Faculdade BandTec\\Pesquisa e Inova√ß√£o (PI)\\alfa-company\\site_institucional\\√Årea_do_Cliente_Responsiva\\node_modules\\package-json",
  "bin": {
    "semver": "bin/semver.js"
  },
  "bugs": {
    "url": "https://github.com/npm/node-semver/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "The semantic version parser used by npm.",
  "devDependencies": {
    "tap": "^14.3.1"
  },
  "files": [
    "bin",
    "range.bnf",
    "semver.js"
  ],
  "homepage": "https://github.com/npm/node-semver#readme",
  "license": "ISC",
  "main": "semver.js",
  "name": "semver",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/node-semver.git"
  },
  "scripts": {
    "postpublish": "git push origin --follow-tags",
    "postversion": "npm publish",
    "preversion": "npm test",
    "test": "tap"
  },
  "tap": {
    "check-coverage": true
  },
  "version": "6.3.0"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                 ë#*7†èG™"¸˝¿è=rl	¯¿ãe.|—zt ŒßÔ‹Ã∑¸]∏2†Ó°Õ‰
cPèdˆÏüÆÂéGè˚8ë2ö/∂…ñ Xj≥öûõéV‘È‹ñ`–Œm›õëÅ∑<Oôm&Ã|ªCËoEÏ+|†ó8⁄#º‰÷Ñÿä˛√X†=⁄†€j\Èù‹GÁ(BbπæØÓ≠b·dbó÷ﬂ´∞{˙b›[© F˙WGÕ˙øó%_Ól¥«Û-XıïVïe∂¶ºñÔıX~Ó∫1kQˆ9àÜ¶x2]≥ág¿—#«ŒR¡á¿!ÀX~˛TŸÀnƒ[6Û‡µ|Ls/%]bÂ“t .©˛s≈˜ø°ﬁπÅx?ﬁ†8Ø:∑€˜‹äàà‹LFmÃæ”É‹◊íÀZÄ`F{¢ÖJ0VZL»-òΩ≤«—›f¡cÙ5»~â¢±\ﬂ˜Tµp∫WUKØY»=›≥j/!€÷∫BÃïÇ©*ŸâŸ Ø⁄¥–Õ*àπUeô≠)Ø’ªxôﬁ≈¡¯Î∏ÏsŒ’ÂˇtˆÏÈ´øpÙ»±_~∑Ïı.\Ñ~ƒüøô«k∏Oiü®EÉ”É‰W7pˇü(„¿Ωã¥Ó.c•M{Äµ∑π%ù€Å;∑O’Ω	h]‡†GôΩVÕ·;]ºœã)›}Æ$∂ï^›·ÑêZóªs∏˛Åª°‡ådπG‘Ûtö›f|•]süv∏HqiÂ`¸D:`¶f&Ô•ò^:◊hê¿¶ÓπÀ?à”EJ±ﬁAu˜ ï§∏Æ10T•y^MêDCq%2‹∏Â?´‚ÄÌóŒíLåT±Ù∫î}‹`ú”Enúı¸(%uªVÁ‰9‚—;À^v=ﬁ∏ôØ% æg3∏⁄Ä|ÇˆÙÏ·ŸÎy¿—#«NLÕL>‹øŸÉ˚nﬂÈB?¢˚ \LÁv˚û[Ÿñ2äAuK@y?ô8√˜zÑÃ„“@ËcÚ	≈±Ãówµ8˘∫}ü¢=öbÂ5“ÿî`F⁄ÈÄÛwéfy(rÙ˛‰Û√	g:Œ`˘õTt&P=–=≠ˆ”≤≠≠w‡ú‘≠Q˛ÆJ6îb≥∂™<z‰ÿ«ßf&?¬&˚ª^Oæ∏D∂–&©∑‚6jÆ|†Q¬˚9\≤ñ®±r??{xˆFóyˇ&≈,é{ <`Ô‚e|∑Wg;©ª˚‹cCÔ¯˝Í∫ñ≥VZM§K‚7˛n‚qõ≤Öe“˙CƒRk]un€Ò‹äà»∂(z—ûˆóµ®ôÚú–Ì¬PÉæ÷∆Æà;ã˛Ùœ?!™	Òjë#ÓÊ≈c˝€‚<pöí[ãlS3ìM*Í5iŒëÓØbÈı˙Ω|π˝%uoB§Bá¶Á¶«fœ^^„˝´P7°gô∂{•ı≠ZO˛g*àzÁ/’-QR|ª≥È•\s`⁄K¸‚çæqÙ»±053˘K¿˜ó}–ﬁÖj˝P¯u¿'6Ú¿µƒ∑md·Î±t >E¯Ï7W÷¸ÚÊ”ï‡ %˛8¢s[†s+""r+ÁÄìî5∞vÖœ=yªGTC8`!Ä3:Õ‹@¸–yó˘:Z_\†®ó◊˙&`O'{&äñ+ı˚1@±lwº∆˚™Ç∏fÙ:›™Uei≠)Ø’ª0OÎÆU,Ω.Q≥QJ@< ·=‡É∑∏œßäÄ¯RÌÒΩTóVU‚„ç—±>Ó…≤6ê∑ªe-µ•˛	§s[ÿéÁVDD∂≠yäÀÎ<eÕ%0É<êw∫≈ß–Â\≠∏Œ= ‚ﬁÄÙï,Á)Bby≠“ßöØjÏõ®jÈıx¯ï∫7!“áÄÄxVWb´¥™,≥5Âµ|∑ãÔÙj- :æ’◊^·j:{xˆVÌ¥>
‰@©aVæ∞X‘G‘W£∞·v0k˘a`ﬂFøñFí7¯∏ó ⁄@Ëı Zj3ˆ¢sªj;û[ë[È'V˛ø4æõ|ı√rÅ‚Ω“|›4S3ìoﬁ^≈⁄——@\n˚”≥ág’ZDvÇı™õ¨jÆ9!Ÿ¿´±WÎ’÷⁄™r£--o)[¨4@YÁb@ŒÈ«ouá£Gé- èó}‡ê{ÚN≠ÖÉïƒ]¸ZïSú≤IΩ¨ÓtYÉQ—2ÅŒÌ™ÌxnEDDn•KÒ!iπ°ëW‘Ñ<√¨ˇÔ∑L/‘ΩëÙ?Uµp„¿Ó™ñ^è¯©∫7!“'k™
ûöôÓ¨bÊfH◊¿€b≠*KkMy≠AhUYV—üK‚ÍÚµ^%^⁄’‰WÛı^Yæ·ñ£kIıJõlmn Bƒç^VwÆ¨Ñl BƒQtnWm«s+""r+=‡8PnŸJ‰ävy^¥úå·3ã=ßÎ/S S3ìªÅoÆbmãcí]Ò∂Ïófœæ\˜&D˙‰ıkº_uÍZq’¿ñ‡‚Åà◊⁄™≤í0£UeYjHœ˝µû”ç∂)Ω©ö‚_QæñToh£ãø∆`TôJ°ÖŒÌv’™{""≤%xä¿p≠”ﬁ◊»Ωåºõ’ŸM^kxô≤+∆∑æÔ†¢˜NÈæ]ÿ`J¨d∞í»Ä∫gznz-	meÒÄÈ⁄$L\k´ “ZS^kZUñu.‰úû)˘~ÎRs·‡ÜÓÓƒ
‚K}~‹kÑ|`™Lun7˜∏◊†s+""≤Á)˝#ÑPT√êÛ.           ∑Í ñRñR	 Î ñR-G    ..          ∑Í ñRñR	 Î ñRG    SEMVER  JS  Î ñRõR	 ‡)Z.Gm                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #!/usr/bin/env node
// Standalone semver comparison program.
// Exits successfully and prints matching version(s) if
// any supplied version is valid and passes all tests.

var argv = process.argv.slice(2)

var versions = []

var range = []

var inc = null

var version = require('../package.json').version

var loose = false

var includePrerelease = false

var coerce = false

var rtl = false

var identifier

var semver = require('../semver')

var reverse = false

var options = {}

main()

function main () {
  if (!argv.length) return help()
  while (argv.length) {
    var a = argv.shift()
    var indexOfEqualSign = a.indexOf('=')
    if (indexOfEqualSign !== -1) {
      a = a.slice(0, indexOfEqualSign)
      argv.unshift(a.slice(indexOfEqualSign + 1))
    }
    switch (a) {
      case '-rv': case '-rev': case '--rev': case '--reverse':
        reverse = true
        break
      case '-l': case '--loose':
        loose = true
        break
      case '-p': case '--include-prerelease':
        includePrerelease = true
        break
      case '-v': case '--version':
        versions.push(argv.shift())
        break
      case '-i': case '--inc': case '--increment':
        switch (argv[0]) {
          case 'major': case 'minor': case 'patch': case 'prerelease':
          case 'premajor': case 'preminor': case 'prepatch':
            inc = argv.shift()
            break
          default:
            inc = 'patch'
            break
        }
        break
      case '--preid':
        identifier = argv.shift()
        break
      case '-r': case '--range':
        range.push(argv.shift())
        break
      case '-c': case '--coerce':
        coerce = true
        break
      case '--rtl':
        rtl = true
        break
      case '--ltr':
        rtl = false
        break
      case '-h': case '--help': case '-?':
        return help()
      default:
        versions.push(a)
        break
    }
  }

  var options = { loose: loose, includePrerelease: includePrerelease, rtl: rtl }

  versions = versions.map(function (v) {
    return coerce ? (semver.coerce(v, options) || { version: v }).version : v
  }).filter(function (v) {
    return semver.valid(v)
  })
  if (!versions.length) return fail()
  if (inc && (versions.length !== 1 || range.length)) { return failInc() }

  for (var i = 0, l = range.length; i < l; i++) {
    versions = versions.filter(function (v) {
      return semver.satisfies(v, range[i], options)
    })
    if (!versions.length) return fail()
  }
  return success(versions)
}

function failInc () {
  console.error('--inc can only be used on a single version with no range')
  fail()
}

function fail () { process.exit(1) }

function success () {
  var compare = reverse ? 'rcompare' : 'compare'
  versions.sort(function (a, b) {
    return semver[compare](a, b, options)
  }).map(function (v) {
    return semver.clean(v, options)
  }).map(function (v) {
    return inc ? semver.inc(v, inc, options, identifier) : v
  }).forEach(function (v, i, _) { console.log(v) })
}

function help () {
  console.log(['SemVer ' + version,
    '',
    'A JavaScript implementation of the https://semver.org/ specification',
    'Copyright Isaac Z. Schlueter',
    '',
    'Usage: semver [options] <version> [<version> [...]]',
    'Prints valid versions sorted by SemVer precedence',
    '',
    'Options:',
    '-r --range <range>',
    '        Print versions that match the specified range.',
    '',
    '-i --increment [<level>]',
    '        Increment a version by the specified level.  Level can',
    '        be one of: major, minor, patch, premajor, preminor,',
    "        prepatch, or prerelease.  Default level is 'patch'.",
    '        Only one version may be specified.',
    '',
    '--preid <identifier>',
    '        Identifier to be used to prefix premajor, preminor,',
    '        prepatch or prerelease version increments.',
    '',
    '-l --loose',
    '        Interpret versions and ranges loosely',
    '',
    '-p --include-prerelease',
    '        Always include prerelease versions in range matching',
    '',
    '-c --coerce',
    '        Coerce a string into SemVer if possible',
    '        (does not imply --loose)',
    '',
    '--rtl',
    '        Coerce version strings right to left',
    '',
    '--ltr',
    '        Coerce version strings left to right (default)',
    '',
    'Program exits successfully if any valid version satisfies',
    'all supplied ranges, and prints all satisfying versions.',
    '',
    'If no satisfying versions are found, then exits failure.',
    '',
    'Versions are printed in ascending order, so supplying',
    'multiple versions to the utility will just sort them.'
  ].join('\n'))
}
                                                                                                                                                                                                                                                                                                                                                                                                                   XÖ©ô…›˝áKgqL∫{¥ä•◊Îgœû™{"[Iæ‹%ÍÀ±¢V„ñq‘J;@´ä„ˇııÔëÅvÙ»±_ûöô¸j‡W(Ò˜]Ô¸%rœwbnÀ¸f‡~§Í©≈Ñàààà¨’yäæ∑Â¸$k+7ùå‡=Ù˘{ Ã.ç¿m`êY ‚=åÀzi÷p‘≥lÉÄ¯´@%◊n7ˆÌî*°ü¨{"[çow˙v¨µ™sç¥≤IóP'ÚZGè˚‡=-µJì]ögÒâ˘ñ·C˝h5°ÄXDDDD÷ÍE@\“O≥ÜEé‡sÚNrè9◊ﬂ*‚ä÷«IÇ%¯∞æå◊ÅKH˙:†n5 ﬁ“U©S3ì¯Ó™÷O˜MTµÙz¸ŸÏ·ŸﬂØ{"[Mæ‹øÄ¯VË,é∞»≠mö›h@ù»ı=rÏèÄwQrK≠laëÖ«ü/$o‡ﬂMœMWö·* ëµ Ä”@i?π˝{=BûcW ä˚d%‘uiRTá¿ö‚03\ö`Œæo=2<E8º’SÖØÓ´b·db◊(≠u·f¸D›ŸäÚ•˛mãZ7œ~£f≥“„˜≥ZZd´9z‰ÿüÔ†‰´¶Ú•eÊ?˜\ﬂbñ‡ù¿_ÆÚ 
àEDDDd≠<≈ÙÖÚñ,aﬂÛ‰Ωå¢ú∑ü1.ä∞$"X`Õu(aó∆òã ¯~e€ãlèˆïßK˜Ô™jÈıò~∂ÓMàlE!À˙V›Á“‰¶Ô∏5¥†¯ˇ∑wÁqr§wùÁ?ODf÷°íJRÎË√m„£⁄vb∆`åap5Ü·¥]Õ.Øoßg«√a3√¬ãYñ1Üls,√∞`<06.‚¶√`ˆÜAin⁄¨{ WŸ›j©’∫èí™TïGD<˚GduK%ïîôÒDddÊ˜˝zU´[™¸≈#=≠™å_¸ûﬂ/µòπµz≠Ò$p?éﬂ˚ƒÕÎè•$Ò{óVñÊ≤
Æ±ààààÙ„8I/b7c1ù∂’¡zcLN≠|ØQˆ0Sï§≈Eèm&¨<ìT™˙‚‹˙Ÿ]"iı1≤ó^
|m±Ω©) Ûª≤›Øè’¿·√ë…mÊî85‡œÏ\%ÏOe÷]Ä8«v"£JIb Óæ?´‡JãàààH?NìÙ"v∆b∞aÑm∑±1@é	b6∂ﬂ√ü*cåÈ˝“÷‚ï+òJlØK«Ò1mdTo=UåÍaÄ{"£,œ>ƒ∑TÁÕT:Y]◊F1q'≥"cEIb ægieÈ≈YVÇXDDDD˙qé$AÈÜI˙9ÿ8&jáò(Jﬁ°Ê<®ŒÉW.%Îâ{ÌA¶Ï„˘÷ˆ9‹.ù¿≥π]Õ±≈ÂÖ)‡_e‹3TÃg∫OGÇj∞2ÏEàå≤<{Ûﬁ™çÑ?3ïY÷(n)9,“èní¯ÀIÜı:7[\}¸¯(Æõ˛}Åï ë~\N ŒÓjM∑ä7ÓÑƒqí¨ÕWí‹5•îJ}º b*>T|r¨zá
‚od∏≤/¶‰g∫_?7Ïàå∫\+àßoQA\)e÷cB˝áE˙WØ5ﬁD“rÀôh≥…˙„«±Qn-√ıø-≠,›Â:®ƒ""""“èê$AºÈ,¢óT€v¢(…Á\A™å_È&à{Lˆz•û_Ó.7óqúFπiÂ;≥
\êˆ'ÅáÜΩëQm6sªñ7}Û∞7Uc2{Í+A,2êz≠Ò¿[p˘~à66π⁄x€Îi≤·(ﬂÁ:®ƒ""""“Ø”∏|CnLRE‹ì$q˜ÁÚí‹ºíè)˘›ˇæÕçÅµœ‡U*‡'	Óú÷ºN2(p$-./ºx}±˝]≥¯ªv4ï£_™¡H42)2€	s;ÓÌOóo˙5‹ªEe±y∂—7ıZ„/Ä∑ë<<w&\ª ∆—ì.Cf·€xÙÅC.*A,""""˝:Å√Au¶˚œ∏”!ÍÑ…O‰ZAú¸√î<ºäﬂ€µ-ÄáW.a<Ø[ÖúãK$	˙Q5Ó’√!ã√^Ñ»∏»≠É1¯S7Vﬂ™ıÑëƒ"©‘kçﬂ˛çÎ∏ùãóŸ<~∆uXó¶Åw∏®±ààààÙÎ∞Í,öKL‹	±Ì0©(ŒØßorùÿÇÔc eå1∑Õ˜Zc<S.%Eg˘%à◊p9$0GãÀ˚ÄoŒ"∂)˘î˜Ô…"tø
™A·ÀéDFEúcboÊ∆;µûp%œﬂü»∏™◊ >Ë:nÎÃ⁄Áú’Cd·[xÙgy]%àEDDD§_ßq5=˙˘jaÉç,qª˘µkx~6∂‡˘òr•{ÌZLTJxSe,‰Ÿ´Ó£;†ÓÌ¿LÅ+ˆcººáﬁîÜ”â8mÊ◊£◊üπ±Zÿüô ¨r‹ìˆD"‚¬øÍÆÉn;I∏Ó¥Õ±K/æ∆U0%àEDDD§_WH™à”˜YµÄ5›‰^L‹
±a<î6∆Û*%<œª}ırúT≠ö≤ﬂ˝=‰±H Œu?F ‚ÚÇ!”ˆ{≥
›èï†ˆ"D∆IîkÒÕZLî3ª^‹Íd[d“‘kç¿sN[À’∆≥ƒù¬é¯vWÅî ë~E$UƒŒJªåózã:lu˚˙∫äﬁºJ¸€$}ª«^…K€Â◊^í Ì+y^–ëØ^ëE‡Úﬁ›xSŸ%q˙Åa/@d‹ƒõôﬁ‡Ü~√û¡îKôMæ‘Ä:∑Íµ∆y‡_‡xhùC6û*l˜®Ø~‡—ˆª§±àààà‚‡Œ›`,ÿv≈I‚€Lÿ8c*e®î∞∑∫∑∞Äo*åÁÁô»Óê¥ó»ÔÃµ;ﬂëU‡ A'˜Ei≠ˆ"D∆M‹Iæ'‰a{øa:≥‹0ê„ >ë	RØ5˛¯◊q√µuö'9¢|Ωã@Jãààà» û%Iä9aƒaD‘¡XLﬁÔT-xÂ^©{asÛÃØÌˆHˆ¶Àﬂ«q^Ì0∂Z{åî≈ÂÖo…"∂7U°ºwW°˚ıÀA5Xˆ"D∆Q^m&åg¶^Hg>†N	bë¨¸G‡Ø\mû<Kt5øS}¯FAî ëA<á√V…X8ÉC‚v;©ﬂ¬Ã1Ø‰Q*óÒ0;[ãgL“é¬òd®^>.gÛ∫òCﬂFF˜Sá
Q=N'íô<©˛ÃU√7¥úp,œ˛ "ì§^kD¿;p}‚ Z6éûÑ|[ãı‚ÀxÙÅ˘¥Aî ëAúVùE3&Iá!q;ÑÿbÚ|´jí»÷3I?[œÉxÁ S*·ïJI+å¸\$È˝<2ó*¿øŒ$∏1T§ær·ìA5¯«a/Bd\Â;®ÓÖ§∞7]…ÓÈüµƒmUãd•^k¨ Ôu7⁄l“<u—uÿ¥J¿Wß¢±àààà‚I5´ª2
œ`cà€llsÌA$}.çÂR7Aº√ÁŸ >¶\¬Êªƒãå^ãâof∏r«^L…œ"tø4úN$Cy&à˝kƒ˛ÃTfg…£VßàUà"„Ê˝@√u–Ê©≥ƒ≠éÎ∞i}Y⁄ Jãààà» ö$m&‹ΩCÓ∂k∞≠66ä∫	‚3∞÷‚í·sæŸπ…D^)IÁÏ,P»	)∑Œ¨O⁄óUË~ú~gÿãgÒf~=?˝Èk{g˜E^˝áE≤WØ5Z¿˜;[6Oús6•˚”PÇXDDDDıI¢ÿ	cH*™:!6å∞∆Ê€áÿZ¿$ÉÍ¸nu∂
/K˜s*eåÔÂYfÅ„@î◊”Z\^¯\‡ã≥àÌœŒ‡Ôöæ˝'fÔÉjP∏2"ëq∑;…	èl¶3•∆Û2õRß±Hn~¯◊A;Wã6∞Óï<˙¿›i(A,""""É:¨πótÙç⁄6åÚÓ0ë∞*•ù[ÿÓ§˚rœÀ5A|Ö$A<Jgí≥´>\à·t√^Ñ»$»+°j|ØRæÆ’D"%àErQØ5,f{ÛD·Êßj3°±àààà.           Î ñRñR	 Ï ñR0G    ..          Î ñRñR	 Ï ñRG    SEMVER  PS1 Î ñRõR	 ÒâàR1G  SEMVER  CMD 0Î ñRõR	 ÒâàR2G  SEMVER      ?Î ñRõR	 ÒâàR3GF                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
}
$ret=0
if (Test-Path "$basedir/node$exe") {
  & "$basedir/node$exe"  "$basedir/../semver/bin/semver.js" $args
  $ret=$LASTEXITCODE
} else {
  & "node$exe"  "$basedir/../semver/bin/semver.js" $args
  $ret=$LASTEXITCODE
}
exit $ret
                áP<µ£
±•ï•œ›˛ãÀﬂ¸îìã‹1œÃãoZàû∑´˝ED2ˆéè¢cà€‚∞˚-≠πƒLù%I˝.`ı·ïmô7Ü ¡ΩôÑÓ”ßÇj‡Ï¡∫àd/⁄çƒk<	‚JÈ—¨bπU•À÷î€ï˜Ó. Èß{PÄ÷î_π¥≤ÙM€rqy·≠Ù7œ®'Â}ÛîÁù\v!UŸ~ŒL"ÕÖÆ^)T‡ÄGæ¶˛∆ü&©®˝Ç¥À˚˜∞˚5//Z‡ènÚs⁄€>å“ﬁ÷kçuUû⁄8&⁄(Ã7oÄ¿'óVñ X\^ó~¯e“¶3…‡¡Ÿó›ìzëé¸mP>*""í≥'ÄUß=C‹±aÿ-4˚Òyí˛√EP˜‡∂ì¡Qﬁ∑ß(ß±T=,2bFeP›8$à˝ô©Ãƒ·z°Ó1üoUÈ≤5Âv^πÃÃg›ïEËÅ∏‹ÉÇ¥¶¸/K+K˜m˝«‚Ú¬KÄπæà7Uaˆ≥
QP∂%UÓßüwc~&Õ≈∂t.≠•*ÔZ+˜}ó73MÎÃ:ó÷˙Ô¡bÂ}ªô:|•π¬%∑¸ﬁM~N{{;£±∑¡?ˇ«¿Î]\†s˘j—„{Äﬂ}À#_˚áÎè;∑⁄üü6`inÜÈ{Ô,⁄>ˇ…∞êá•ï•‚‘®g$®cü’.'ÄWëˆÅ›c ã4Ã&kÁªÖ® ﬁïU‡Çßª¸⁄∞!"˝)¿@¨ûå¡Ä:*˚v?πë¥4‹„:v¥±âçbå?Ùô/–mU˘’Ú•ﬂ∞y‚Ùo„†5Âv∆˜Ÿu_qZU⁄»m!X∏∂¡‘ùC>¸¡“ “õV^Ÿ~ü§¿ÃS.±k·≈òíÔ2l1WiÙ¸‰ëü8vˇGÔ{¯º4Ñ§I{¥—ƒü-DÁÎîÊf(ÕΩ≈ÑW÷	◊7â6öƒÌ∂ÅÌæO7¶Ï„U ¯≥”…ÎˆÃÂã⁄N	™¡±Ì?YØ5é-./<Çˆ6˘ƒ—‹€œ’‡©~Ì„¿ª]\$ººÈìt-ØR˛™=üÛr⁄ó÷Ëú_%\ªäç{O òíOy~é ¡}îvœf∏“Å˝˛∞ "“K“f‚K'O€åÒ∞@‹na„<‹≈gHƒC∑˙ ´Ä/œ"∂?3]îÔª™A!JûD§wQ≥ï|/(FÛçJØ‰[ÚLL“öÚ-Œc[K∏æY§c˙_X⁄7˜®w∂º+nªÑËU ÏZx1˛Ïî”∏iÑÎõNﬂS®ÌËÀ±ˆS•=sÕ ˙Ω.˚≥3Ïz≈ã¶2Õ0®O?ÙÍá.ß	–Ô#ã_√A†}Ò
3L"n1æGyﬂ ˚ú? ¶[UFhoG€Ôﬁ‚◊˛Ü‰òjÍŒÈ·˙&6åäÙîÏ∆PŸøá ˛=›vÕ ¥√$°∞ı©%Ø\¬õ™‡œNÚÅ∆5Œ 7ÏEààÙÈií>ƒnéc¿Z‚ÕNRe‰˚ê[Ä¢úπ˝ˆ¨WΩ¬íˆ"Dd ÷µ:¯”ïaØdG6äqùd¢OêEÇò§UeÅƒ¯”ï]ª?˚el?C˚¬™ìòï;ˆ2Û‚√Öªó/ªMË⁄("∫⁄ƒﬂUÄ{lcŒ›˜bZg/—<y¶Î‹e<è©ª2}Á~
˜`*ı©„~ƒøºçﬂ:.3Û¢Ci√HÔ,…˛ÌD{;⁄>∫”/‘kçxqy·wp4\¶sÈ
ïÉÖ8∫#„yîÊf)Õ¢*)≠ﬂ™AQéãàÙÍY\™Û`∫”±-^πHsSùÅS@QJŒﬁûU‡ ÖxXoÄ'óVñÜΩé‹5O]†y‚Ã∞ó·‘$¥´Z}xeÿK(îx≥]Ëq‹õ‰08lMπ]Á“fÓ-V¡î|f_v7Sá˜”:sëˆ•À–«)U <Ceﬂ<Sá˜#azù’+Óc^æZúﬂØÅ©√˚®òßsÒ
Ìó	◊7˙™öˆgg®Ïüßrpæp	˛k¸A⁄ }%àè<¯ƒâ˚?zﬂ'ÄØL{·∏›!ººNiæS'¿'Çjpbß_¨◊'ó¥∑£ÈœÇj–∏ÕÁ¸*éƒÌóü 3Íâ("£Ë‡Ó»æ<ÉÌDƒÌØ¿… Œì$à√a/§k>´¿oﬂ%"# j∂(S‹˚ŒqP∑≈ek Ì‚Võh≥Ö?Sú÷[¸]”ÃæÏnf¢;	◊6àÆiUw:/$ç=ÉW.?ﬂ™“üõ°¥{∂–ﬂÎl?∑⁄Øt∑≥zÖÈªÔp6„{TÓ•rpo“w˘jìh≥ı|À—≠«∆3…â„Jo∫Çøk∫0˝¢o·iÉÚª¸ íà ≠≥óîDÃœz¸ÌÌËÈeÁüGÅó¶ΩX∏∂A‹Í≠ﬂŒ∏z
¯Àa/BDd «I⁄›„$öµœ`√€ÈÊM„ZF|∂˚ëÓ§à»(˙†∫håƒ]ŒZSn◊π∏ÜOÒƒ[åÔQﬁ;GyÔ¯‰9åÁ˝‡.„FW7ù30æGiœ,•=cq‚‡wzıC©yîÒ˚$â¶‘:ó◊∆Ì»EQ=MoCÆ¥∑£Á∑˚§z≠ˇ’’E€Á.π
%∑ˆA5œÙáàåª+$INg_√åÔGqªùÙ√*¯P¢VI*A‘^HD‰6¢Õbœóãu◊˚2z<€>øöEXŸŸV“LN¨∂/ÆeVnÓ◊]È;A|‰¡'"‡«]\≠”Ö–<Ó~"®∑≠B©◊⁄€—ÛüÉj–Îõ·®üaÎ¸Í∏Oè/Ç&·a/BDd@k¿i\ˆ!∞1Q´çç"S
ÎIõ	}£πçh≥UËØñ„VA\Ø5Nê´s.n∑	ØldZnn´Èr¡€ÁUTñì8PÉU¸Io¥‘ZÁVâ;Ei±6ñN“_íÈó∫ØIM{õπ´Ù÷:Äz≠qÜ[≥ÎáÌÑz¬õΩ’@OYDdTYíSIÓƒ∆ÄµÿNòÙâ≥cõ!>MRE,""∑c-q´∏Iÿ∏YÏ
Áı|⁄Ø÷Y%sÙÄz≠Ò$ﬂ]èõ-¬µ^kŸ$Ö=ÙÍáú¥%(A|‰¡'Z¿∫X ÷“|Ó¨ìPrS?TÉûøc÷kÌÌËX'I˜„«q‘”∞yÍB°ü÷è∏¯øáΩëîû‹›µw[JDÕ6qÉÀoB1Ik›QâàÙ®®U∫q'ƒFcŸ-»Yk Ì:´Wà€jUôÉÌmH>ãã(·üπá≠D”åS¸ãhüøú◊>C≤O˝˙ŒˆvU{õù√¿;˚yA˜È†ì*‚∏’¶}a’E(π—áÇjÙ∞!"í“	ív9Óì‹8v¢qÌ–{ë‰œMG∞DDzT‘˚Õ∏9ûâNß≠)∑≥ñ÷ÈãôÑñÎloC˙;$“ùÍ\\’l™l˝⁄CØ~ËÑ´`'àè<¯DºÀ…*¨eÛòìérΩwˆ“{xªÓ¸æè;≤ho≥ıﬁ•ï•◊˜˘ö˜‡ËÜΩ˘‹9l<ñ\√¥	¸∞!"í“Vãâuw-¯∂&I‚ÒRwé§Çÿ…iëI6A\Ã fGúµ›ÆuÓ"V≠*≥tC“ÓP˚üÃ‚b≠3J¯gƒÔw0M1G|¢Œ`™7◊6‘”‘≠_
™¡'}qΩ÷¯$…˝‘¥∑ôö˛tieÈ˚ñVñÊ{yAΩ÷8ºœ≈≈„vá÷)µ…uÏGÉj‡§∏à»ê=GRÎå1€
±ùcÌ8&â/í®SÇXD§GE≠ .jÎú∂¶‹.∂4OÍ3C;µ!˝0IÎ	ßZg/™ä8ø˛–´rrÚK…AåÔæ∏7m†Õ„g(ÌŸÖW)ß_’d{¯qæ¯
¥∑E7CÚ‰ËGñVñ>¨êT ]a[•pP~∫˚Ø?‘Äó•ΩxÎÙy*ÊÒ¶*iC	4»Ë…≠à»¥Å„¿ÎHYî<c¿∆ƒÌ÷ZÃ∏ı√?Kí ëEõÕ‰{A¡û∆Õb&Æ˙øüÌ:pÎ‹%*á˜„OÎ”±€ê÷kçˆ‚Ú¬ˇÕÈmíü}È]N√N∏¯ø\M˝f˝»ÉO¨‚†úç"6ûV·\J1`PV”™◊´hoGI¯b‡¿˜ìT	ˇßm ‘kç&/qp[mcÀ∆QÌ≠1ˆ†å˝;Iôñ‰¡ó≥Øk∆¨±ƒÌ6ÒxVü%y¿+""Ω≤∂êÉÕ¢1O◊kwmG∑≥ñÕcß3	=·n◊ÜÙWÄøv}—ˆ˘KDW›é•òp?TÉ']uRÕq‰¡'é ?‡"V∏vïÊâ≥.BM™w’‡à´`ıZ„n±¥∑≈“m#Úün˚â=◊6hùæ‡"‘$˚…†¸Â∞!"‚P√Â†:c ìÙõå«rJ›y\ˆô —f¡⁄9XK‹*ÿö2PØ5úµ›.º≤N˚Çûô:t€6§ıZ√íÃ£rﬁÍj„ÿÈq;ı5,œ?íE`7«˝Ô~”E†Ê©Ût.Í¡ ~¯±‚˛⁄€qı˝8zB∏y‚,·˙¶ãPìËœqÙ FD§`Nê¥öp∆xQ´ÌÏXUØgÄ‚ï¡âà\—⁄9ƒ≠N2\u2|7IõKÁ6èü"nk`ù=∑!≠◊ü&ÉºRtuCÎ‹¯◊A5XÀ"∞≥Òëü∞$Ì˛‹Eºç£œÆo∏5)˛ú§µÑÛÔB›ßH⁄€1TØ5⁄¿7í‹ê¶c-Où–ƒŸ˛ùæ)®˙Éëqì@ECHO off
SETLOCAL
CALL :find_dp0

IF EXIST "%dp0%\node.exe" (
  SET "_prog=%dp0%\node.exe"
) ELSE (
  SET "_prog=node"
  SET PATHEXT=%PATHEXT:;.JS;=;%
)

"%_prog%"  "%dp0%\..\semver\bin\semver.js" %*
ENDLOCAL
EXIT /b %errorlevel%
:find_dp0
SET dp0=%~dp0
EXIT /b
                                                                                                                                                                                                                                        K∆òL*Ñl'}b“*à¡}k Ì6û>°ô7˝I›Ü¥^k<¸ŒV‘’πtôÊâ‹“X£Æ<TÉ'≥æP&	bÄz≠q¯*‡£icŸ(f˝Ò„¥œ_Nø∞Ò±|MPrˇCÈÓÌ◊t◊êäçb÷ü8N˚¸jÍuIzıZ„c¿õÅ‘Y˚ŒÍÎçg±„9e>ç+¿W’‡˜áΩëƒ¿S$ïƒn∆∑Z…≈±È0¡\˛9âàëg2´*R’n—Z^‰•€ö“I€—Ìlw[UgüÃY“z≠Òì¿O•_“ıößŒ—:£ÉS∑±’?˙ìy\,≥1$∞ÍµF¯N“‹∞ñç£œ±yÏÙ§W%∂ÅÔ™¡€Éj0¥Øå›Ω};Œˆˆ§ˆ∂ Íµ∆˜ìOK%ººŒ˙c«à5∏nÀq`1®:ÏÖàà‰dkPù√;eã1ªï $ƒ∫Îë±f</≥aEi3a£NÓ˝èÀ∂£€Ÿ0d˝Ògî$æµ,⁄ê~/AáÒ ÿ<~äˆ9ÇÓ`+9¸ky]0”Òñz≠Òs¿ÎÅï¥±Zg/≤∂rtR˚Ø Ø™¡œ{![¥∑„©^k|
¯|äÆn≤˛ôß	◊'æ(ÍA5xd»Î…SL“Éÿ]≈òå¡v"C∆§Ñ¯…ÉY›Òä»xÀ≤Ç∏ ˜ëìÿ^b;ómG∑≥ù∞€ÜTÌ&n"ì6§›ˆ!ÔﬁÎ2.¿∆3œ—:}—uÿQ∑’íÚWÚºh.	bÄz≠ÒI¬ÈGI˘Ê7⁄h≤æÚ4ÕìÁ'•‚¥MÚÁˆ˘EL.io«SΩ÷8|√§ú®wB÷;FÛ‰9«-ÓGBº¯ä<˚ÖãàÑ%Iª=CË{DÌà∏b∫	„∑JRA<π%g"2åÁç}Ç∏H≠.Ü…e€—Ìl±˛¯3¥/\qzîe⁄Ü¥^kÿz≠Òn‡ﬂê2?∞›Ê≥ßŸ<~vs7s¯gA5¯Ìº/ú[Çí~4ıZ„Äœ>û&ñç-ÕÁŒ≤ˆèO”YÎiñ>7®?‡¢LV∂Ìm™ﬁ™◊ÔÌöõ @ÍµFXØ5ﬁ|1H™`÷“|Ókè%⁄(Ïˇ Æ}
¯¬†º7®c5IID§ÄÛN#ÉçB¢VHí!yÓˇåDD
®€b"ì/‹qA˙˛∆-%à∑8m;∫ùµl<}¢õXã˜É µiΩ÷¯Y‡üëú~r¶uÊ<ÎO«Ü}€¸Iah}œ5Aº•^k<VØ5ﬁ,©~„Q≥≈’∆q÷{Üpm¨é∞◊Izïæ9®è{1ΩÍÓÌ[Ä7‚doü«Ω9ıZ„oÅ◊ﬂEr;∞ËÍ&k+GŸ<~zúø¯üﬁ|QP>=Ï≈ààY8Ü√jc¿`∞≠&6é«†Äò3$#""„Õœd⁄∆1qªìEËæ®?Óç\∂¶‹ÆuÊ<kè>3©ï€CiCZØ5˛î§8è\∆Ø¨≥ˆôß	ØLd˛ÁgÄ7’‡ôa-`(	‚-ıZ„ìıZ„~‡¿oì‚X]∏∂¡˙cœ∞˛ËQ:óÆåÍ§ê‰œ·A5∏?ØIÖY®◊vÕﬁ˛⁄€ë◊≠&˛‡¿˚Ä¡èÆXKÎÃEÆ¸˝ì4Oùß!C´$-9^TÉ®jXDH˙?M2àÕc0∆6C‚0f˙ü≈eüfëb{4´¿qí≥q≥≠.ä∆ek Ì∂Êﬁ¥N]úî|¡–€ê÷kçS¿WﬂAö‹¿6qª√˙„œ∞y¸Ã8Â	nÂ)íñﬂ5ÏÆ•a^|KΩ÷¯k‡óÓ˛/Äœ$V∏æI¯‰	ºrâ ¡Ωî˜œ„œLπ\n>¸*·†úˆb\ÍÓÌ7v˜ˆ_ﬂºfêX◊ÌÌÅΩîÔ(˛ﬁ⁄8¶siçŒ≈+LﬂsvzÿKJ≠^k¨ˇ~qy·«Åo'˘Ü‚AbŸ(¢y‚,≠Sò:¥è °}xï≤√’ÊÊ(Û¿œ’`¨{ﬁàà $ÈC‹v;âhl´a≈~;p;õ¿i4†ND&«
µYéömJÛª≤›3%àwVØ5ö¿,./¸2ì¿◊πäm„òÕßi_Xe˙ﬁ√îá¸ˇAÜ>|oNöwá◊}pqy·!‡˝¿É8zjﬂ:s!…£‹{ò {\Ñ,ö´¿O ?6ÏƒñB$à∑táb˝(£ãÀü<@Úç„È≥⁄9ÓÑ4OûßyÚ<˛ÃÂ}{(ÕœQöõqæÓƒ¿ﬂ <TÉÚz2◊›€˜ÔÎÓÌ…7É¡ˆˆ‘yöß∂ˆv7•˘›EŸ[¢fãÚU:ó◊	Ø\ΩÓ	ÊÆÖ{á∏2∑∫â‚˜/./¸…ﬂ”∑wÏ;n£(Ÿ””Á)œÔ¶r`û“¸nåWËä∞‡˜HÜ¸aP&‚Ò¶à» b‡9¿Ì≥1ƒÌq‚ŸëŒØí$–ïQëIÒô¨{P]‹±±nnß^k<ºyqy·ç¿èê¥u"⁄lrıâcîˆÃ1}œ¡¬‰	®?XƒìÊ›|œ€ó~
¯¿[]ƒç;6û>AÎÙ”/:4.Iˇ&K¿™¡©a/ÊZ∆:.ø74Å[\^ÿ|	OIäüÏ$ñ)˘îÊf)ÕÕ‡Ôö¡üù∆î|wãΩπK$Õ¶ˇ¯3‡/Éj‡vö˜àZ\^ÿK≤∑_J“„ˆÛÄ˝Éƒ2æOi˜•πŸ‹ˆ÷Ü—FìËjìÍ&·⁄’[ˆ’ùªÔ≈îÊÁ2]”≠’ ”åÎ‚Ú¬‡-¿◊ê7πc–X∆˜(Ô›Mi~éÚ¸\O{qé‰¡Œ †ja)™ÌÔÔÓˇË}CZ…ÛH™ΩG√âlÉÅ]˜ΩÑ Û…Ÿ—;VjH%ﬂ|b»kπ©’áW2˚C›˚∫jV°•ÕShû8„,ûˆ3´ªm·:Ñ}´Ø>ºÚÔHÓçùÛÁfŸ˝Íœ "tO¬+¨?˛L&±á¸wÏÀÇjp$´‡ãÀ_|/I!ô”B∆“‹.¶Ó∫#I.éﬁ–ÇÄü™¡_{1ΩÍ˛;‡ü„úó?;√‘]wPŸ∑{˜Ú_ÅˇÏ*1Ï<ü;
	‚õY\^∏∏è‰Ü„•¿=¿a‡ ∞òf∏Ò∆…QæÀ$Á¸ô©5n∂]öõâ˝Ÿiœõ™TåÔÌ$…êëÁHéú7Ä'Çj¨´ﬂ˜$∏…ﬁﬁM≤∑á∏ı~\%9ûyâd?.¯3S´•›≥mnv⁄Û*ÂäÒΩ=˝ƒ≤±›å÷7^∑;~‹ìj•fã∏Ÿ&ÓÙ◊ZŸõ™∞˚5/√x√iˇùuÇ¯ZãÀ9$væò$˘ˇJ`†LØ?;ù$ˇÁí‰ø?=ïuÀ…à§?⁄ßÅø$y∏≥TÉëÀ>à»‰)`Çx…I¢◊ìú¿H]^emåÌDÏz≈ΩLﬁè5f‘ƒñ‰˝»√¿{Å'ÜªúõSÇx|)A<ö∆$A¸f`-ã‡∆˜òÌ´≤›ì÷ŸU6èùÃ$ˆ8'à∑∏h;∫Ø\¶rhÂ˝{ß+.Cga,⁄ê../ j¿∑ ˇƒU\S*Q9∏è ˛=¯≥Ö>E¸7‡7Çj‡ÙàÉƒ"C∞∏º I+Å‘*Êô}È=.Bı-œÒÕ,./Ãê$ˇ_—˝xIÚˇníd˝ûÓè s$…‰ê˜¨WÄU„{gKs≥-n6*ÕÕ‡MWJ^π\¡pgø±HéˆûN Ov?ûp˝\D$/Æﬂﬂ…‰∫ˇ£˜)A<¶î M„ê ™¡˝ãÀœ /…‚{>˜>º p∫in>{ñ÷ÈÛôƒûÑÒµ“∂ΩvÜÚæ=îÁw·Ô*ƒú†±oC∫∏º*^ÿœ/¡—~˙3”›ñ≤ªä“NdÉ$)¸qíΩt˜çv%àEÜdqy·ˇæ”E¨ôó‹…‘°Å:i§2Ï±àà‰C	b…ìﬁˇã»†“~ø“◊ü…‡≤ÌËv¶‰S⁄ΩÎöVïS?Ûø›ÜtqyaxF^h5z m‹§ÌË.JªgÒwM„œLÂ—™Ú…^˛5…^>TÉ\+A,2$ãÀ>[$OΩ“1∞ÎÂ˜RﬁÁfò{Øî ôJKûÙ˛_D•± a€—≥›èÁ[ÖŒ‹{Á˙‘ù˚Á≤àç⁄êﬁ‘‚Ú¬]ºp⁄¯e¿]$'çê¸yœ†Ãv_vÖ§e◊F˜ﬂ/ì¥~}8	<]ﬁø˜“Ù›g*á]∆%ŸÀ«áôÿWÇXdàó*¿GHz"•c≥/ªõ ˛˘€Æ#JãàL%àEDDDD§W√ôî%2¢ÍµFxc©ÉYÀ∆Sœ—:ïMè*ë€Q±»Äóﬁ
|Ωr {w3˚“ª3Ôè£
bë…†
bÈï*àETØ5>ºÜ§ÂD*ù’5Æ¸„S¥œØ¶%""""""""“3Uã8∞∏ºOÄñ“∆ÚgßôæÁ ÂΩÓÿ©ÇXDd2®ÇXDDDDDz•±àCãÀØæ¯fí	ßÛßß®⁄«‘·˝Á“∆⁄¢±à»dPÇXDDDDDz•±Hó|‡~‡Õ¿óˇ0–_éΩØ´ñ\≈RÇXDd2(A,"""""ΩRÇX$ãÀÛ¿Áu?^º∏á§2x?0≥”kÎµ∆u©ñVñé•±à»dPÇXDDDDDz•±HÅ,./Ï›˛sıZcuêXK+K7ƒ
™¡@±DDd¥(A,"""""Ωrû ë—‡{""""""""""2JãàààààààààL(%#!/bin/sh
basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")

case `uname` in
    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;
esac

if [ -x "$basedir/node" ]; then
  "$basedir/node"  "$basedir/../semver/bin/semver.js" "$@"
  ret=$?
else 
  node  "$basedir/../semver/bin/semver.js" "$@"
  ret=$?
fi
exit $ret
                                                                                                                                                                                          XâÀ{ëDÈ#MtôëTÑõFß =zÉcWµ4†üÜÂ=ÜSΩ‰ß¥C˙mﬂ}3˝¯ósR÷¡Ú≥ö˘…>¿04lÀ≈µ]ÙíX€æáÜahÿRruü¥x-à‚ÿ—ƒÎéMÙ&c‘eh∫FwœB”5ÙíéQr°¨1®ÜQ“y€ÊàJñõd••√—r£Œä¬",ìÍû∞\gπ±<»WúÚ&ﬂñ-–#	–1EˇsÜCW≤xÜd)?≈6'ov…äTs'ÊÎjè°8bKÜ©zπjY)°n˙¿Ë¸P¿JÁkârú=y=]Úæ{Ú∂d#|ú°Ó5 C!„ÚG⁄E“ï˙É¬d’E^èe/LYxSùøM”TŒIŸõ#Ædñ!ŸÛ£ÿôô∂Ø'A¶¶È{é‘ÉÒ›§Z˜˛òÑ»2,€)¢É0∂a(6óvS¸Z≤¨¸ÔÛΩ™r”z©âπb&ç˜Ω/ªç>0V–ÒWÄ√öè¢k ïs"«FÑÍjFÅì"J>Ufü:Cá]Ö›!¬n€pï˘–b4H‚H{÷7'SÅ5ç`eÑπ≈2Z)}.“«QcP◊Ïß—O“çGnÛ√`˘97"±‰ã4ÀÎîxòª¡‡á|-ö´*YIxg4Ãπ∑fœ‰ŒÒˆ2ê C¡ÁöƒB∑◊£OF=].Òû°††~…j¨Ì ≤)!T´¬pe+êÛ(èâú˛%Ô…‘\ô«?}ëÉWN¢ÎÌãÈ•
Á÷O‚⁄–ŸÌ”ﬁrzy“¿µ`{µç’C»ÙªPõ‡áÏ¢˘*B?r–o9<ÛÿI4@√∂ÌD4	«vy¸Åã<˜ÿßò]™ÚÏ£ß˘'ø¸˜Ü~ø8-7ñ1õ~Óê¯˙œ A—JrÅÚw%Xö>nÉ<´Û9á±Ü¨´Ã≠∑¨˚˚\Œ0˚Êp©"rÉ©Ü•ÎºB<AÑ‡À˝ŸläG˙∏EäP\ﬂíQ‰◊>’Âè˘,d∆Aœ~t◊Ö;ÆøñŸ≈˝û˘]”5J%ç~OÏ^¬b<UÆñ©÷JÏl∂Òµ¢Â™A˝÷%ÃG÷x¯sÁh‹∂ÑÎ∫<˝ﬂ˝6W;|˛#'y›;/W∂ÈπßVπ˙˙ñ~ÊR
2:
J`ˆrzõ¯â“Y^¶°QÌ…büL^’◊≥√ÅƒÔâêB7ÙdËé·)jQ°‚+ÛÑµ-˚x®)Œ†ÜﬂØ~˚Wø}L8˝‰6ó›0À√+ÁX=ŸÚÚ˘D=?‰êX”ãˆ6˚Ù;—ıÔ∫bﬁ 4qÌ*â\#Â	É~€∆Í⁄Ë%ëƒΩΩcQ™Íh%ªÔR©ÈÃ¨ÚÏó÷˘oèlãT)4<ˇ£¯`≈;ø–@bMYM=˙QvôﬂOô'¥4ó◊√ oKÔﬂÂ›ﬂ2åW≤i–˚≈«Iq†^(íg»ÚÚ •qä°•¨HVÇh) à¸ºˇ¨ÿ„%Œ%ﬁ!ıÿﬂîwªâÁS]Ö“ìkÔ?˘@à®{ò˜ü˛h6Nø|ª∑Ò„€≥á4É3¥(¿+[∏Üîo„KV%yÖzX
iT¨Vπ.»øÔœ!3à'<Œ2»bBz˛°KAc¨{∏SŒ ÙöR|çF√òRﬁò¯Ò†#˙›¨ŒPxsÚÀü}Çªﬁt£‚~Q…g˛ÏEÓø˜%~Ú7ﬁê´˝¿¿qP>»q y¬™D©®·»Ä∂*@˛q“0‡áLrh»av‰¯:µ=qä*∑‘¿mPw=ym ≤ﬂ‡G^‡CÛílízé≠¨òÔ4¬pfPÎ“!0·˝Úy#îz“¿(ÀÛ£h¯ﬁaIŸ£Xòúhü©¬=’u…-JæR~Ï4hØI˘›_|T~úÚºJk)0y¡9Áåˇl»i™Aæaiz©¬kæMﬂ¸∂CÅ^†ﬁÂﬂ˜·óËwåä∆Ò{ÊËüµŸ⁄‹¶≥V\lÑåo˜°2Vlã@`TDdà~[ÑΩ6 ‡Xn`≈Ì∫.≠›>Æ´±ªπ∆Ω∞¬ªæ∑XÆ€,í=è’˚kÿÔ	#çö£%ãR«8≠M9ÊÌ ›•_N¯1»”VÏuÍÀ¢Òb?mF∏˛˙r#QNjπí÷+ ^ i H‹e∫⁄~M0Î˚ä%Ô!†j‘%4∏Êùã|Ê_ø¿ÍóÊöõ∏ÓÆc<˝Â3@®Ï¥m·˝a{"∂%º>«≈±Zª]4M‹3=W∆±]Z;=nº˚ Á_⁄„Ï;\^üÂùﬂu_˘‹9ˆ∂zloÙx¯ÛÁ∏˝GºñÑ“ﬂ’◊⁄óGÒ–>ı[Zô©◊ÎbûΩL`àP.yÒ[•6Ê å•;„∞¢|B£Ïﬂ\Í
è¡Ù≈ix•uZì2≈ÓxUz’OÈ∑è¶·à'#Œ*È≤f9gÓbîu&9,Z†Ω›ß›Î”ﬁ∞∞ª:éÁ˝—k€Ã™“ÓÙŸª–èî•i¬[ƒÍ•$â_ˆí§e◊uD”¿Í:h=q[øÎpˆô·ç¢k¸Ø_éÔ˙—´sıE>º4*¯úZ~
>7ÍÅ–TT¡ôõîbCbÓ2÷äÈŸrI.ÔπWcUpK‰6A‰¨Ãlöºøizû4æí2⁄üí 2R®wã¢±≠„	ÁWöÊ»®Á®;ÿx=DÜ›ãS®@Q˛.x)bfJm%E4M@í)ºßËh¶y8Dø'ü	~¢B≤†ÏIôn·Ωÿ®áÁ¥¸k”˚◊P !Ú≥ÉÛÄ¯%%Î¸L# *up∆67»É'ªœ£s&Ôr€jÒÿà¥∑–~ÛöÛ^hòc,Ïﬂ:ç˜-5ÎÚ=>df&ù/J[ãÚ~‡◊ˇöˇ√ø√ÏBçü˝ΩL‹ªx®FØ´HhÊëíﬂÀ†A<æÍ˜®ÇXl˚`GÊ˜–@yeê°…Hä‹¥Ωø8øDYêÆô
≈n⁄sQ$b@e5àÜtçT€å}óöÛr È˘°Ù†Ø!Øb/[tze%()G˚ΩsO¬TÂa˜˛àx±‚—∆pH‰	m>à|{—–wrËßBı= „`Gº*EyCÅ#ê
Ï(t^∆ˆ÷f=π_©BÄçBqûª{–fb1T5›,ül±˝Ró3_⁄∆È¡‹	ò<Îœ@u¢BØm£È`„`w]œ”Cê¶˘—"¿(†ƒˆ’	
 ƒè·ÿ.›N◊ÖœØúÊÃ≈57_∆ﬂ˘Ê€FÈÂU—©Äæaê˝0fTg‚r∆ﬁîvßM)ÆuΩ—˝ToPo:ñ‚`J˝aøû†—™€ΩØ˜•√„o=‚B˜ìÈ.ﬂå0°π\ãs÷oˇqIÄêÅÌp@:‹¸âö5ã‚Â˙ËÚΩ{&Ì=ãá?û⁄Râ“Ñé’Ö«v—aÚÌ'AwqÕÍ[LLUÈu-l€°Ωg·∫.€Î]ñˇ~ÉØ~˛'õ€‹ÚöC\sÀ€]∂◊ª\~Õ,”áw#õÚ‡˘ﬂ:ßq‰<,ô<rí%ˇÚä'ƒ\R $0Ha-öçF‡‚S¢K#2F∫§,Î[}1U&´A“ö)Ùi¿nyg(A_-:O“eÑÙÎ^Uyg€•€SBÊ[ºwäf⁄“#ıiv›sL ı∆R€tëπ+™Ùˆ⁄œıyÈ±-:ª∆î∆˙Jˇ–EŒ>¥É”sqlóÍTâRYcg≠mé*KJ∂Æy!∏lÀe˛HçvªOw”B3@/Ù[v‡]¢Î‚ô√◊Lq¯öin}£ï˙ÊÉ^Ôy˝(áƒRb÷çh≤ƒAm)÷´oÒhÇŸlJåö\g∂°9§k@ıÃØÄbGâﬂîßåì˜Ø0@HÍAærΩA#¶˝FòóΩB¸ƒ›	C|âdÅyÿ3:Œt´\öÛê
`ØÖ™ËqzÁ£¢æ…ßÛ?©©√S/y˛ÂÛxl(˜$µR ˜âØÀ¨úçò≤>˙l“∫ÿ'ï÷“ˇ}Ä∑XΩN√åŒ€(ëNëﬂ¡I/íÄU2JãSÙ˛‚{Á`Gˆ!ıÓ1íjã~πºO“»D8ox√YóÜ0ªÍ“˝Ò≥IAMî"Ÿ¿<ˇÙÆ∫Ó›v]ÉÕ’øÙè?¿O¸óÔ‡…Wπ·Œ‹Ú∫√‹Ú∫√%≈xß¨;á87sYbéÖ≤˙9fÅLN®!H	 ŸˇsßN˘Ô◊òåR1‰?Ü/£H]™≥´xH⁄˙‡cÜd®—¢´™ﬁ®Áÿ‘n?\_¥\ØëJ%w‹zﬂ&Oòô¢º¢Z7#µ2q=ó2v¿ú…*CÙØZ…ÔÎ8
√*F,Î˜¥k1(îJÖ	Úìø|}Z_Ï√∫óÁ¯Ñ§fnPg˘=a˚æüN±{∂«ﬁy–+P©ñimıA£¢Sö–ÈÔŸ‘fJÿñÖkyﬁÍÇ÷áRMxé8v,y∫D~d	9“D∑ﬂ√∂w¯¯áæÃÊÍ.ﬂ¸É˜å¸Œyú|JõG©Û+®ãﬂ&ıª™Ï¯9ï∂$X¸s$!G÷˝≥8mØLV Ûe ÅzΩç˙Ñ(•—…”Ôﬁ/@≥Lõ‹n“ºx›ﬂr§Y£iﬁûœfb0µ(–„q !Ò˝©àHö2Cf
Î‘ïqˇÜe‘“‹ÛÍ¯¸GNﬂmÀaÔ|èRUgÍPô÷j?à·Áÿ~8,±ïÈÜéah∏öÀÏ“µâ
'ü9OØk£i–Ìÿ¸Èo?…Ù\Ö˚%ëÏ¸+ü=ÀÎóè¬ìõúhÃ'⁄44√Wﬂ5—èuri¥ã)ô†Ó	n~<—˝óú„çˇ¯Øx)A>πªÚ.           OÜàRàR	 ÜàR4G    ..          OÜàRàR	 ÜàRC    LICENSE     û4ÜàRõR	 ‡)Z4CU  INDEX   JS  ®=ÜàRõR	 ‡)ZCö   Âp a c k a  ‘g e . j s o   n   ÂACKAG~1JSO  GÜàRàR  ‡)Z  ˙  README  MD  jQÜàRõR	 ‡)Z‘B?  Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   7aÜàRõR	 ‡)ZÔBq  Â2 4 6 8 6  ¶6 5 2 6 3     ˇˇˇˇÂp a c k a  ¶g e . j s o   n . ÂACKAG~1246  câàRàR	 sâàRTCŒ  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  câàRõR	 sâàRTCŒ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  .           SÜàRàR	 ÜàR5G    ..          SÜàRàR	 ÜàRC    Âp a c k a  ‘g e . j s o   n   ÂACKAG~1JSO  5ÜàRàR  ‡)Z  ‰  Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   %@ÜàRõR	 ‡)ZC%  INDEX   JS  ùHÜàRõR	 ‡)Z‚B‹  LICENSE     oTÜàRõR	 ‡)Z”BU  README  MD  ÖdÜàRõR	 ‡)ZÓBK  Â1 5 9 0 9  È6 7 6 5 2     ˇˇˇˇÂp a c k a  Èg e . j s o   n . ÂACKAG~1159  dâàRàR	 tâàRUC  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  dâàRõR	 tâàRUC                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  .           óÜàRàR	 ÜàR6G    ..          óÜàRàR	 ÜàRC    Âp a c k a  ‘g e . j s o   n   ÂACKAG~1JSO  5ÜàRàR  ‡)Z  ›  Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   ßAÜàRõR	 ‡)ZC´  INDEX   JS  _JÜàRõR	 ‡)Zu@.(  Bx t   ˇˇˇˇ tˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇL I C E N  tS E - M I T   . t LICENS~1TXT  2VÜàRõR	 ‡)Z–B5  README  MD  eÜàRõR	 ‡)ZÌBÉ
  TEXT    JS  nÜàRõR	 ‡)Zp@/(  ES2015     nÜàRàR	 oÜàR•M    Â4 2 6 0 0  %0 9 9 2 1     ˇˇˇˇÂp a c k a  %g e . j s o   n . ÂACKAG~1426  dâàRàR	 tâàRVC≥  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  dâàRõR	 tâàRVC≥                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  .           ÜàRàR	 ÜàR7G    ..          ÜàRàR	 ÜàRC    LICENSE     5ÜàRõR	 ‡)ZkBU  INDEX   JS  fBÜàRõR	 ‡)ZC=  Âp a c k a  ‘g e . j s o   n   ÂACKAG~1JSO  bJÜàRàR  ‡)Z  %  README  MD  wVÜàRõR	 ‡)ZÕBy
  Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   KeÜàRõR	 ‡)ZÏBË  Â2 9 9 8 5  +2 1 6 1 2     ˇˇˇˇÂp a c k a  +g e . j s o   n . ÂACKAG~1299  fâàRàR	 tâàRWC"  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  fâàRõR	 tâàRWC"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  .           HÎ ñRñR	 Ï ñR8G    ..          HÎ ñRñR	 Ï ñRÊ    Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   %Ï ñRõR	 ‡)Z9G’  INDEX   JS  sÏ ñRõR	 ‡)Z:GN  LICENSE     ÖÏ ñRõR	 ‡)Z;GU  README  MD  íÏ ñRõR	 ‡)Z<GÜ  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  ´Ï ñRõR	 IâàR>Gë                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  declare namespace latestVersion {
	interface Options {
		/**
		A semver range or [dist-tag](https://docs.npmjs.com/cli/dist-tag).
		*/
		readonly version?: string;
	}
}

declare const latestVersion: {
	/**
	Get the latest version of an npm package.

	@example
	```
	import latestVersion = require('latest-version');

	(async () => {
		console.log(await latestVersion('ava'));
		//=> '0.18.0'

		console.log(await latestVersion('@sindresorhus/df'));
		//=> '1.0.1'

		// Also works with semver ranges and dist-tags
		console.log(await latestVersion('npm', {version: 'latest-5'}));
		//=> '5.5.1'
	})();
	```
	*/
	(packageName: string, options?: latestVersion.Options): Promise<string>;

	// TODO: Remove this for the next major release, refactor the whole definition to:
	// declare function latestVersion(
	// 	packageName: string,
	// 	options?: latestVersion.Options
	// ): Promise<string>;
	// export = latestVersion;
	default: typeof latestVersion;
};

export = latestVersion;
                                           ush(t)},run:function(e,t){var r=n.hooks.all[e];if(r&&r.length)for(var a,l=0;a=r[l++];)a(t)}}},r=n.Token=function(e,t,n,r,a){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length,this.greedy=!!a};if(r.stringify=function(e,t,a){if("string"==typeof e)return e;if("Array"===n.util.type(e))return e.map(function(n){return r.stringify(n,t,e)}).join("");var l={type:e.type,content:r.stringify(e.content,t,a),tag:"span",classes:["token",e.type],attributes:{},language:t,parent:a};if(e.alias){var i="Array"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(l.classes,i)}n.hooks.run("wrap",l);var o=Object.keys(l.attributes).map(function(e){return e+'="'+(l.attributes[e]||"").replace(/"/g,"&quot;")+'"'}).join(" ");return"<"+l.tag+' class="'+l.classes.join(" ")+'"'+(o?" "+o:"")+">"+l.content+"</"+l.tag+">"},!_self.document)return _self.addEventListener?(n.disableWorkerMessageHandler||_self.addEventListener("message",function(e){var t=JSON.parse(e.data),r=t.language,a=t.code,l=t.immediateClose;_self.postMessage(n.highlight(a,n.languages[r],r)),l&&_self.close()},!1),_self.Prism):_self.Prism;var a=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return a&&(n.filename=a.src,n.manual||a.hasAttribute("data-manual")||("loading"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener("DOMContentLoaded",n.highlightAll))),_self.Prism}();"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);
Prism.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/(^|[^\\])["']/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.hooks.add("wrap",function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;
Prism.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(?:;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^{}\s][^{};]*?(?=\s*\{)/,string:{pattern:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,"function":/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},Prism.languages.css.'use strict';
const packageJson = require('package-json');

const lastestVersion = async (packageName, options) => {
	const {version} = await packageJson(packageName.toLowerCase(), options);
	return version;
};

module.exports = lastestVersion;
// TODO: Remove this for the next major release
module.exports.default = lastestVersion;
                                                                                                                                                                                  de:Prism.languages.css}},alias:"language-css"}},Prism.languages.markup.tag));

Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,"boolean":/\b(?:true|false)\b/,"function":/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/};
Prism.languages.javascript=Prism.languages.extend("clike",{"class-name":[Prism.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},/\b(?:as|async|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/],number:/\b(?:(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\d+n|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,"function":/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\(|\.(?:apply|bind|call)\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),Prism.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[[^\]\r\n]+]|\\.|[^\/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,alias:"function"},constant:/\b[A-Z][A-Z\d_]*\b/}),Prism.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\${[^}]+}/,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:"language-javascript",greedy:!0}}),Prism.languages.js=Prism.languages.javascript;
!function(){if("undefined"!=typeof self&&self.Prism&&self.document){var e="line-numbers",t=/\n(?!$)/g,n=function(e){var n=r(e),s=n["white-space"];if("pre-wrap"===s||"pre-line"===s){var l=e.querySelector("code"),i=e.querySelector(".line-numbers-rows"),a=e.querySelector(".line-numbers-sizer"),o=l.textContent.split(t);a||(a=document.createElement("span"),a.className="line-numbers-sizer",l.appendChild(a)),a.style.display="block",o.forEach(function(e,t){a.textContent=e||"\n";var n=a.getBoundingClientRect().height;i.children[t].style.height=n+"px"}),a.textContent="",a.style.display="none"}},r=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener("resize",function(){Array.prototype.forEach.call(document.querySelectorAMIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                                                                                                                                                                                                                                                                                                                                                                                                                                           },normalize:function(e,t){t=r(this.defaults,t);for(var i in t){var o=n(i);"normalize"!==i&&"setDefaults"!==o&&t[i]&&this[o]&&(e=this[o].call(this,e,t[i]))}return e},leftTrim:function(e){return e.replace(/^\s+/,"")},rightTrim:function(e){return e.replace(/\s+$/,"")},tabsToSpaces:function(e,n){return n=0|n||4,e.replace(/\t/g,new Array(++n).join(" "))},spacesToTabs:function(e,n){return n=0|n||4,e.replace(RegExp(" {"+n+"}","g"),"	")},removeTrailing:function(e){return e.replace(/\s*?$/gm,"")},removeInitialLineFeed:function(e){return e.replace(/^(?:\r?\n|\r)/,"")},removeIndent:function(e){var n=e.match(/^[^\S\n\r]*(?=\S)/gm);return n&&n[0].length?(n.sort(function(e,n){return e.length-n.length}),n[0].length?e.replace(RegExp("^"+n[0],"gm"),""):e):e},indent:function(e,n){return e.replace(/^[^\S\n\r]*(?=\S)/gm,new Array(++n).join("	")+"$&")},breakLines:function(e,n){n=n===!0?80:0|n||80;for(var r=e.split("\n"),i=0;i<r.length;++i)if(!(t(r[i])<=n)){for(var o=r[i].split(/(\s+)/g),a=0,s=0;s<o.length;++s){var l=t(o[s]);a+=l,a>n&&(o[s]="\n"+o[s],a=l)}r[i]=o.join("")}return r.join("\n")}},"undefined"!=typeof module&&module.exports&&(module.exports=e),"undefined"!=typeof Prism&&(Prism.plugins.NormalizeWhitespace=new e({"remove-trailing":!0,"remove-indent":!0,"left-trim":!0,"right-trim":!0}),Prism.hooks.add("before-sanity-check",function(e){var n=Prism.plugins.NormalizeWhitespace;if(!e.settings||e.settings["whitespace-normalization"]!==!1){if((!e.element||!e.element.parentNode)&&e.code)return e.code=n.normalize(e.code,e.settings),void 0;var t=e.element.parentNode,r=/\bno-whitespace-normalization\b/;if(e.code&&t&&"pre"===t.nodeName.toLowerCase()&&!r.test(t.className)&&!r.test(e.element.className)){for(var i=t.childNodes,o="",a="",s=!1,l=0;l<i.length;++l){var c=i[l];c==e.element?s=!0:"#text"===c.nodeName&&(s?a+=c.nodeValue:o+=c.nodeValue,t.removeChild(c),--l)}if(e.element.children.length&&Prism.plugins.KeepMarkup){var u=o+e.element.innerHTML+a;e.element.innerHTML=n.normalize(u,e.settings),e.code=e.element.textContent}else e.code=o+e.code+a,e.code=n.normalize(e.code,e.settings)}}}))}();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          # latest-version [![Build Status](https://travis-ci.org/sindresorhus/latest-version.svg?branch=master)](https://travis-ci.org/sindresorhus/latest-version)

> Get the latest version of an npm package

Fetches the version directly from the registry instead of depending on the massive [npm](https://github.com/npm/npm/blob/8b5e7b6ae5b4cd2d7d62eaf93b1428638b387072/package.json#L37-L85) module like the [latest](https://github.com/bahamas10/node-latest) module does.


## Install

```
$ npm install latest-version
```


## Usage

```js
const latestVersion = require('latest-version');

(async () => {
	console.log(await latestVersion('ava'));
	//=> '0.18.0'

	console.log(await latestVersion('@sindresorhus/df'));
	//=> '1.0.1'

	// Also works with semver ranges and dist-tags
	console.log(await latestVersion('npm', {version: 'latest-5'}));
	//=> '5.5.1'
})();
```


## Related

- [latest-version-cli](https://github.com/sindresorhus/latest-version-cli) - CLI for this module
- [package-json](https://github.com/sindresorhus/package-json) - Get the package.json of a package from the npm registry


## License

MIT ¬© [Sindre Sorhus](https://sindresorhus.com)
                                                                                                                                                                                                                                                                                                                                                                                          °øæFõö±~s6H÷mjÖæIkV∑c÷‚Fåü•¡¯9µôπTù9+•°\]á“∏.‘◊d—Zj∞rΩ`Ãº.Î∑5eìMKL≠öc∂Ω•†∂#÷›ŸΩoò4Ê∞¥ÍéïuoÏÜ`Ô8;{iË¥ÿ∑oí™W“F ik;îÌ€˚´Œı‹∏π∆¶]01Îé—ÜÓÿn¨^◊â%k[
¸:`≤Q`e÷áWõóf}—”ÎÃbùVLô.çˇÑFLú–î±õ`k>èXvoüÅÈñ∂l≥o¿vGiËÎbπª6Êªdg∫≠¶[’eY÷Bsmñ	÷4eânk,i…‹ÖÕY±\äÉÂÌYø~ õÕFcm2ûùzDlZ…±]VdZl∆~—xåt˙
 ;1ens¥g¥dŒÃÃ]‘öŸàs⁄1cFGfNïLîÒ1≠ò1•1”f7`¬Ã:Lû¶ŒÍ•M∞0káÈf˘õ¶ıôß◊X÷AcY'2⁄1^Gñ.Í¬ä≈]–[:£√±4òå√∫˘¯òØ!ﬁ÷íÀﬁ^<Lâ‚ﬁ±(ÓûîbÔD¨Í®7NÚcA ©&§OÁ∑6€Rì≈˚≥º:ó¡«”g˘xV v˛ò*≈éˇ[>û+†Ù‘1*ÚœQûtÜ*¡%	‘ƒ	£U˜≥¨⁄#XZ˝Ñ m∑©…ìÒ{øSÒ∏ú“Á®zñÍT‡ñD0·Q?}~h∆ücykñ@e‹ ﬂQÈzè≤MY<¥s„ö˚VÆÓ¥‚˚ıVDNõI∂ˆB^zgP~Ì5≈wﬂR~Î-•Rpó_ _«•Ï¸+™èΩ‡„°ª2]RH_˚ãÚ?üSÒL
Ù¡õÈØ˝û2øø©~-pxBu‘s™é>•"¸.ï^R`gˇB…})ƒO*ØPe'∞\ëKeÔd6£¶ãÃkˇST‡u…lfP1(_ÄôEq◊ﬁ9JÖﬁq˛2L„˘Ü^$Ú€ÙnvŸœüÕ¬©n{ë™Œ¶ÒW©9#ÛR•‹”Øö™•î
2g˛F’“Ô(;pùRßªî˝Fıl¡Êú\JÃ≥©±îı∞3ü™Ï[î˚Å_˝π≤Àè≥÷Ó‹t
‰gü#<Úã‡±ˇ¯FÒ–;Rp)„Õ<î¸¨ƒ]`Ë…C∑#ˇõˇØ‹w·ë˚a’˜(ﬂ˜˝ﬁ .ÔÙ·¬/Ó[»kq<–K„„“<™'•ÚfÒ!Je›ñO‰O˛ûÍ˝øSs¸%•û7)}ç 2ù?(N˛ìÍK/)˛YPîÙú˜cØPÒ≠ºﬁ¸?4Ù"EsÊ‰’›@x√•}ªåì√)]ùÀ+≠h^ˆèÂEüx˛≈œ£∏?÷á«c¸˘uL«ÒΩ∂?Œ‚≈¯jF
,ï{_jü¢tﬁE*ÆS≥·e÷◊)˜–mπ¬[˝„T.*§bÅ¨o£{Tm†)Á+˛AµmUˇ^*∞+•‚Í |ø¶P”1N¶Wê€(úWu˜ÛæU≈√∞∆˜©àîÔÕ¯ë‚<YØ)µ+íøùJ˘†t™«ùß‹¯Ââœ(ø¸JﬁsüÚ3øR~˚-o“e{ΩTB≈c˛œî¸¯Çí_>R˛w9’ä©¯X¬«?_Rı◊G*næ·ÌÖßTˇÙñ™”2ùŒøRc+€¥˜œÇ kT•Àvõ*∞Ã∏"”rô ¨K‘úêÌÌ¯9ûg∆Ò,Cñ·gX~ârHÏÛ¸d^$Ú./^ÖÕgEI¸xÏ '
¨H»ú√¡ÿ¯GµìBWGä∂Ìd¶rÂÙÓ\HÁ¬I'Æ_∂ÂÍNùﬂM·ô}\>Á∆_ﬂ·˙}ä
ÜÒ›ŸÂ\9ÊÃôBŒ≥Âb∫ Î»*¸[≤ﬂ´{=‡‹[uüΩ®òŸú,pÊlÅ9I˚Hér$ÒàáÉ∂‡È*ıÖ´nãŸÎ4˜Ïﬂ7o-ˆ8¿F–πU⁄R+ÀNË∑aÙå∫Ù_õ˛⁄ÍÃ6©ÕJ)∂uÃ0C_Éy ıÃ4Y±A˝M≤O^–êëì‘òπL∆uÎ3G_⁄À5µòk®Œt›Üû¨¡‰EòΩ≤	f◊eƒDi;W7«ŒΩ{C5ÿÌØ¡Åê˙∏jå[`3|u$0¨'aG5É»√´Hä›DV™¥/È&ƒ«œ#,|7}KœÅË—ø!]˚‘£[ﬂ:—jÃ∞±u=•6Võ€Å´	;∏?ÔE∏xŒ¿ﬁYKP8 }õÃ›\K∞£ŒSM¡•s>´w‘∆“•é>ÇG∑6lÿÛ+,2«∏6:õ‰5∑Ü∏áµ≈„P{∂Óm¿rSuÙ6’$¥Âpbb“ªêê:Rä˝¡éÔC»—û2OqpÎÄ≥/‹z·r[’Örv˚®≥€[è–oO@r˙")Ó-∏|AÍü¢›ÂÔ‡‘1N3§†p1GíµXo’ä9ÀÎ∞“∏Œûù…IõA°@'+q	π)´»N\Mn“Z
“å»M^CA˙jNÁ≠ÁLﬁ&ég≠„DÆÅ }	iâÛöÚ¸ÒmdöPê≠G~ŒRAÁ"A∆2äéÎs¸∏1'
M ÀâMÌè∑¨◊Âj∑≠pQ.ˆ“Ñ°uqè®áWd]º£‘Òè´EPR-Çì’Nl¿Å⁄lÒ–d©Ätñ,ÎŸí%ˆçÇR{˜⁄8z®·‰£Üwh}Çé4`}C–°ÜÑ©á∑†€»≤.Z”4$Ît⁄‚z¨‹†â’.MBcõêY‘èìgqÊ¨ßŒ,Â∏‡Ê¯â±;>îºcΩôùHHk≈·£ÕtÌn}9.ı¢cS¶
$«.Tc“<´N&ÆRcér˚SŸn7
0wh∞n_]6	ñ∑	íÌº’d~qP÷gpÃHºÇÜ·‚5Pê®Et¸‚ì7ìê¥ÅåÃ≤ÏÃπt~?˝`«„{ªπ{góL„z“≤ñ'H?¥ ˇqÏvÔÜÌÅo∞snÅìw'YÉ	ãô™∫XPt‚R¡‚BÅıPÇèh·H– ”†@º?^a˝àÏ-€◊ ¡•r’◊yD',àÆ$-«Pñ√ŸóXr˝‚NÆüﬂ≈Ö[8û∑ú‹ÃIde!9∑?)í4IVﬁP¡Â8äéMÁ‘Ò˘úî.$ß`	9«óêQ0ïîú^d‰¥$˜ÿ7ÇJÙΩîÚôSÛ8yJóìß®e0l<Ü„·0Æ S"¿TáMƒTß‰KoÊó(˝2˛ôõ>Á,øŒ`~Èµ¸ÚXÅ®À·íüz,U•ÙP˛óü"¸∞¸î/è¢_S…&˚uvéöÉ›®πˇ‰!Ûø≈Ak±*ªïˇ¬Â'`*„™Á>#SÖÀ1À8†Dê©äå+Á_∫å`J‹>ÁÀ∏
öœ1++¿î(√¢\Ëü(Ωô´ü´$ÇK%cócóc÷~ h}j}JÄ÷.           ¢ÓÖàRàR	 ÔÖàR=G    ..          ¢ÓÖàRàR	 ÔÖàRmB    A. D S _ S  Õt o r e   ˇˇ  ˇˇˇˇDS_STO~1     ñÜàRõR	 ‡)ZI@  At e r m -  §s i z e   ˇˇ  ˇˇˇˇTERM-S~1     4,ÜàRõR	 ‡)Z:<Äj                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
  "_from": "latest-version@^5.0.0",
  "_id": "latest-version@5.1.0",
  "_inBundle": false,
  "_integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
  "_location": "/latest-version",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "latest-version@^5.0.0",
    "name": "latest-version",
    "escapedName": "latest-version",
    "rawSpec": "^5.0.0",
    "saveSpec": null,
    "fetchSpec": "^5.0.0"
  },
  "_requiredBy": [
    "/update-notifier"
  ],
  "_resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
  "_shasum": "119dfe908fe38d15dfa43ecd13fa12ec8832face",
  "_spec": "latest-version@^5.0.0",
  "_where": "D:\\Faculdade BandTec\\Pesquisa e Inova√ß√£o (PI)\\alfa-company\\site_institucional\\√Årea_do_Cliente_Responsiva\\node_modules\\update-notifier",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/latest-version/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "package-json": "^6.3.0"
  },
  "deprecated": false,
  "description": "Get the latest version of an npm package",
  "devDependencies": {
    "ava": "^1.4.1",
    "semver": "^6.0.0",
    "semver-regex": "^2.0.0",
    "tsd": "^0.7.2",
    "xo": "^0.24.0"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "homepage": "https://github.com/sindresorhus/latest-version#readme",
  "keywords": [
    "latest",
    "version",
    "npm",
    "pkg",
    "package",
    "package.json",
    "current",
    "module"
  ],
  "license": "MIT",
  "name": "latest-version",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/latest-version.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "5.1.0"
}
                                                                                                               .scroll.apply(this.element, [(o - r) / (a - r)]) }, p = { id: a, options: u, test: h, handler: c, state: null, element: this, $element: s, timeoutId: null }, o[a] = p, s.data("_scrollexId", p.id), p.options.initialize && p.options.initialize.apply(this), s }, jQuery.fn.unscrollex = function () { var e = t(this); if (0 == this.length) return e; if (this.length > 1) { for (var n = 0; n < this.length; n++)t(this[n]).unscrollex(); return e } var i, l; return (i = e.data("_scrollexId")) ? (l = o[i], window.clearTimeout(l.timeoutId), delete o[i], e.removeData("_scrollexId"), l.options.terminate && l.options.terminate.apply(this), e) : e } }(jQuery);
/* jquery.scrolly v1.0.0-dev | (c) @ajlkn | MIT licensed */
(function (e) { function u(s, o) { var u, a, f; if ((u = e(s))[t] == 0) return n; a = u[i]()[r]; switch (o.anchor) { case "middle": f = a - (e(window).height() - u.outerHeight()) / 2; break; default: case r: f = Math.max(a, 0) }return typeof o[i] == "function" ? f -= o[i]() : f -= o[i], f } var t = "length", n = null, r = "top", i = "offset", s = "click.scrolly", o = e(window); e.fn.scrolly = function (i) { var o, a, f, l, c = e(this); if (this[t] == 0) return c; if (this[t] > 1) { for (o = 0; o < this[t]; o++)e(this[o]).scrolly(i); return c } l = n, f = c.attr("href"); if (f.charAt(0) != "#" || f[t] < 2) return c; a = jQuery.extend({ anchor: r, easing: "swing", offset: 0, parent: e("body,html"), pollOnce: !1, speed: 1e3 }, i), a.pollOnce && (l = u(f, a)), c.off(s).on(s, function (e) { var t = l !== n ? l : u(f, a); t !== n && (e.preventDefault(), a.parent.stop().animate({ scrollTop: t }, a.speed, a.easing)) }) } })(jQuery);
/* breakpoints.js v1.0 | @ajlkn | MIT licensed */
var breakpoints = function () { "use strict"; function e(e) { t.init(e) } var t = { list: null, media: {}, events: [], init: function (e) { t.list = e, window.addEventListener("resize", t.poll), window.addEventListener("orientationchange", t.poll), window.addEventListener("load", t.poll), window.addEventListener("fullscreenchange", t.poll) }.           ∫Ï ñRñR	 Ì ñR?G    ..          ∫Ï ñRñR	 Ì ñRÊ    LICENSE      >Ì ñRõR	 ‡)Z@Gﬁ  INDEX   JS  îÌ ñRõR	 ‡)ZAGú  AC H A N G  4E L O G . m   d   CHANGE~1MD   ∞Ó ñRõR	 ‡)ZCG}  README  MD  ΩÓ ñRõR	 ‡)ZFG%  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  Ô ñRõR	 IâàRGG                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Copyright (c) 2015, Rebecca Turner

Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

                                                                                                                                                                                                                                                                                                  ventListener('glider-loaded',centerArrows);
document.addEventListener('glider-refresh',centerArrows);


document.addEventListener('glider-loaded', hideFFScrollBars);
document.addEventListener('glider-refresh', hideFFScrollBars);
function hideFFScrollBars(e){
  if(/firefox/i.test(navigator.userAgent)){
    if (window.innerWidth > 575 && e.target.id !== 'glider-persp'){
      e.target.parentNode.style.height = (e.target.offsetHeight - 17) + 'px'
    }
  }
}

(function ($) {

  var $window = $(window),
    $body = $('body'),
    $main = $('#main');

  // Breakpoints.
  breakpoints({
    xlarge: ['1281px', '1680px'],
    large: ['981px', '1280px'],
    medium: ['737px', '980px'],
    small: ['481px', '736px'],
    xsmall: ['361px', '480px'],
    xxsmall: [null, '360px']
  });

  // Play initial animations on page load.
  $window.on('load', function () {
    window.setTimeout(function () {
      $body.removeClass('is-preload');
    }, 100);
  });

  // Nav.
  var $nav = $('#nav');

  if ($nav.length > 0) {

    // Shrink effect.
    $main
      .scrollex({
        mode: 'top',
        enter: function () {
          $nav.addClass('alt');
        },
        leave: function () {
          $nav.removeClass('alt');
        },
      });

    // Links.
    var $nav_a = $nav.find('a');

    $nav_a
      .scrolly({
        speed: 1000,
        offset: function () { return $nav.height(); }
      })
      .on('click', function () {

        var $this = $(this);

        // External link? Bail.
        if ($this.attr('href').charAt(0) != '#') return;

        // Deactivate all links.
        $nav_a.removeClass('active active-locked');

        // Activate link *and* lock it (so Scrollex doesn't try to activate other links as we're scrolling to this one's section).
        $this.addClass('active active-locked');


      })
      .each(function () {

        var $this = $(this),
          id = $this.attr('href'),
          $section = $(id);

        // No section for this link? Bail.
        if ($section.length < 1)
          return;

        // Scrollex.
        $section.scrollex({
          mode: 'middle',
          initialize: function () {

            // Deactivate section.
            if (browser.canUse('transition'))
              $section.addClass('inactive');

          },
          enter: function () {

            // Activate section.
            $section.removeClass('inactive');

            // No locked links? Deactivate all links and activate this section's one.
            if ($nav_a.filter('.active-locked').length == 0) {

              $nav_a.removeClass('active');
              $this.addClass('active');
              document.getElementById('nav').scrollLeft += $this.offset().left - 120;

            }

            // Otherwise, if this section's link is the one that's locked, unlock it.
            else if ($this.hasClass('active-locked'))
              $this.removeClass('active-locked');

          }
 'use strict'
module.exports = writeFile
module.exports.sync = writeFileSync
module.exports._getTmpname = getTmpname // for testing
module.exports._cleanupOnExit = cleanupOnExit

const fs = require('fs')
const MurmurHash3 = require('imurmurhash')
const onExit = require('signal-exit')
const path = require('path')
const isTypedArray = require('is-typedarray')
const typedArrayToBuffer = require('typedarray-to-buffer')
const { promisify } = require('util')
const activeFiles = {}

// if we run inside of a worker_thread, `process.pid` is not unique
/* istanbul ignore next */
const threadId = (function getId () {
  try {
    const workerThreads = require('worker_threads')

    /// if we are in main thread, this is set to `0`
    return workerThreads.threadId
  } catch (e) {
    // worker_threads are not available, fallback to 0
    return 0
  }
})()

let invocations = 0
function getTmpname (filename) {
  return filename + '.' +
    MurmurHash3(__filename)
      .hash(String(process.pid))
      .hash(String(threadId))
      .hash(String(++invocations))
      .result()
}

function cleanupOnExit (tmpfile) {
  return () => {
    try {
      fs.unlinkSync(typeof tmpfile === 'function' ? tmpfile() : tmpfile)
    } catch (_) {}
  }
}

function serializeActiveFile (absoluteName) {
  return new Promise(resolve => {
    // make a queue if it doesn't already exist
    if (!activeFiles[absoluteName]) activeFiles[absoluteName] = []

    activeFiles[absoluteName].push(resolve) // add this job to the queue
    if (activeFiles[absoluteName].length === 1) resolve() // kick off the first one
  })
}

// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342
function isChownErrOk (err) {
  if (err.code === 'ENOSYS') {
    return true
  }

  const nonroot = !process.getuid || process.getuid() !== 0
  if (nonroot) {
    if (err.code === 'EINVAL' || err.code === 'EPERM') {
      return true
    }
  }

  return false
}

async function writeFileAsync (filename, data, options = {}) {
  if (typeof options === 'string') {
    options = { encoding: options }
  }

  let fd
  let tmpfile
  /* istanbul ignore next -- The closure only gets called when onExit triggers */
  const removeOnExitHandler = onExit(cleanupOnExit(() => tmpfile))
  const absoluteName = path.resolve(filename)

  try {
    await serializeActiveFile(absoluteName)
    const truename = await promisify(fs.realpath)(filename).catch(() => filename)
    tmpfile = getTmpname(truename)

    if (!options.mode || !options.chown) {
      // Either mode or chown is not explicitly set
      // Default behavior is to copy it from original file
      const stats = await promisify(fs.stat)(truename).catch(() => {})
      if (stats) {
        if (options.mode == null) {
          options.mode = stats.mode
        }

        if (options.chown == null && process.getuid) {
          options.chown = { uid: stats.uid, gid: stats.gid }
        }
      }
    }

    fd = await promisify(fs.open)(tmpfile, 'w', options.mode)
    if (options.tmpfileCreated) {
      await options.tmpfileCreated(tmpfile)
    }
    if (isTypedArray(data)) {
      data = typedArrayToBuffer(data)
    }
    if (Buffer.isBuffer(data)) {
      await promisify(fs.write)(fd, data, 0, data.length, 0)
    } else if (data != null) {
      await promisify(fs.write)(fd, String(data), 0, String(options.encoding || 'utf8'))
    }

    if (options.fsync !== false) {
      await promisify(fs.fsync)(fd)
    }

    await promisify(fs.close)(fd)
    fd = null

    if (options.chown) {
      await promisify(fs.chown)(tmpfile, options.chown.uid, options.chown.gid).catch(err => {
        if (!isChownErrOk(err)) {
          throw err
        }
      })
    }

    if (options.mode) {
      await promisify(fs.chmod)(tmpfile, options.mode).catch(err => {
        if (!isChownErrOk(err)) {
          throw err
        }
      })
    }

    await promisify(fs.rename)(tmpfile, truename)
  } finally {
    if (fd) {
      await promisify(fs.close)(fd).catch(
        /* istanbul ignore next */
        () => {}
      )
    }
    removeOnExitHandler()
    await promisify(fs.unlink)(tmpfile).catch(() => {})
    activeFiles[absoluteName].shift() // remove the element added by serializeSameFile
    if (activeFiles[absoluteName].length > 0) {
      activeFiles[absoluteName][0]() // start next job if one is pending
    } else delete activeFiles[absoluteName]
  }
}

function writeFile (filename, data, options, callback) {
  if (options instanceof Function) {
    callback = options
    options = {}
  }

  const promise = writeFileAsync(filename, data, options)
  if (callback) {
    promise.then(callback, callback)
  }

  return promise
}

function writeFileSync (filename, data, options) {
  if (typeof options === 'string') options = { encoding: options }
  else if (!options) options = {}
  try {
    filename = fs.realpathSync(filename)
  } catch (ex) {
    // it's ok, it'll happen on a not yet existing file
  }
  const tmpfile = getTmpname(filename)

  if (!options.mode || !options.chown) {
    // Either mode or chown is not explicitly set
    // Default behavior is to copy it from original file
    try {
      const stats = fs.statSync(filename)
      options = Object.assign({}, options)
      if (!options.mode) {
        options.mode = stats.mode
      }
      if (!options.chown && process.getuid) {
        options.chown = { uid: stats.uid, gid: stats.gid }
      }
    } catch (ex) {
      // ignore stat errors
    }
  }

  let fd
  const cleanup = cleanupOnExit(tmpfile)
  const removeOnExitHandler = onExit(cleanup)

  let threw = true
  try {
    fd = fs.openSync(tmpfile, 'w', options.mode || 0o666)
    if (options.tmpfileCreated) {
      options.tmpfileCreated(tmpfile)
    }
    if (isTypedArray(data)) {
      data = typedArrayToBuffer(data)
    }
    if (Buffer.isBuffer(data)) {
      fs.writeSync(fd, data, 0, data.length, 0)
    } else if (data != null) {
      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))
    }
    if (options.fsync !== false) {
      fs.fsyncSync(fd)
    }

    fs.closeSync(fd)
    fd = null

    if (options.chown) {
      try {
        fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)
      } catch (err) {
        if (!isChownErrOk(err)) {
          throw err
        }
      }
    }

    if (options.mode) {
      try {
        fs.chmodSync(tmpfile, options.mode)
      } catch (err) {
        if (!isChownErrOk(err)) {
          throw err
        }
      }
    }

    fs.renameSync(tmpfile, filename)
    threw = false
  } finally {
    if (fd) {
      try {
        fs.closeSync(fd)
      } catch (ex) {
        // ignore close errors at this stage, error may have closed fd already.
      }
    }
    removeOnExitHandler()
    if (threw) {
      cleanup()
    }
  }
}
                                                                                                                                                                                                                                                                                                                                                                         margin: 0 auto;
        }
        .glider-slide {
            min-height: 150px;
        }
        .glider-slide img {
            width: 100%;
        }
    </style>
  </head>
  <body>
    <div class="glider-contain">
        <div class="glider">
            <div><img alt="Test" src="http://placehold.it/300x300?text=1"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=2"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=3"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=4"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=5"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=6"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=7"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=8"></div>
            <div><img alt="Test" src="http://placehold.it/300x300?text=9"></div>
            <div><im# 3.0.0

* Implement options.tmpfileCreated callback.
* Drop Node.js 6, modernize code, return Promise from async function.
* Support write TypedArray's like in node fs.writeFile.
* Remove graceful-fs dependency.

# 2.4.3

* Ignore errors raised by `fs.closeSync` when cleaning up after a write
  error.

# 2.4.2

* A pair of patches to fix some fd leaks.  We would leak fds with sync use
  when errors occured and with async use any time fsync was not in use. (#34)

# 2.4.1

* Fix a bug where `signal-exit` instances would be leaked. This was fixed when addressing #35.

# 2.4.0

## Features

* Allow chown and mode options to be set to false to disable the defaulting behavior. (#20)
* Support passing encoding strings in options slot for compat with Node.js API. (#31)
* Add support for running inside of worker threads (#37)

## Fixes

* Remove unneeded call when returning success (#36)
                                                                                                                                   It˝ÖOøAd±ºì	Ejd∞›Û;EŒ+TΩÉöWCPﬁiÉ˙û~xÚzº4g¶Ì›‘tèFEª3:~ÓèÇ°m<^ˇk%*{∆≥Ô˙IWUÍ^L@jïS‘∏#&.ã+Q&‹Õ∑¬¬¯vˆá(•[@á	î[˝e8©˙´H$cH∞¢∂S`âbl]ÂH∑‡¯åÑÍô/ãë÷4i≠Sê◊ÛÅ‰s∂Á\§‘åA"ÖµÒ7
mó-6ÁÜŒ|ÜﬁﬂøD◊œü£ıÌ«dßÖO(∞Õ
ˆã5/˚¢È’(Î'xÒûÛ€<º˛ØÖ¸úan=¢*ÙH6k|VÜ‘»j5C˝ÀAh7ö@5	÷å}<oõ0Ôí
+Ôj·ñ3
ªÇåÿÊœ¯wõÒÊ
œSéÕ5X}UÉÌ˜,∞˙&ç„–W«¯Úò”	?ãÆq\âsôÁÏçl\K∑¿©H5Æ$à…Êñ≠¥GLÕ8Ñ}œƒë8rœà3·ÊÿGxŸpãÄDvc{zgkè∏ó•á_Ê ∏Eÿ·‚cGlªg¿ˆCê9v<üFbÀm%V—.wWc[∞	F˚iöŒÑY¿-⁄g"Ù8¶!Xâ[é˝◊8ï„f:2	ÿ…M„]6 ˜ìÃ·A„ñP7ê–€w„Ïë”2Ö@=•m}ë∆vå*V#(O…q©¿É,ôîe>¥–¿˝”!§ƒƒ˛÷#û¶¶∏”äF¡ñÊ¿Ìo>A√Û…<üÿ÷œ¶°ÂÕlƒWåDi◊lt¸±çøÆ‚g¡ëª*úS„0èÔ˛œ üèø˜Ò_ˇÎü∏mK∑=Döv»õAÎæûÈˆsËDO<‘‡p†%é<ÑïÁÈXN™∞’√ÀŒj≈f·√ä'õ;(w∆·v¸X∫gáuu¸ü°ƒ≥ˆP–ãYbﬁ^~<A·æ"√æ€z¯$|èÍŒá®jäCAE$“ã")˚"‚Æ‡aË)‹ıﬁ∑kÛqÍ“$puƒNÇéHê(¿G‹r[zJ∆M¿èQ˙Æy«Tq{KãéÛªN3ÄT·˚˝*Ã;†·≥≥v©ÕVæ"‡Lﬂj¿'Îï¯zª
ﬂr?1«åÌzL]´¿gî¯|ç{=˙¡;g"÷]Ua◊=ì")„27ÊìaŒ#} Óf9‡J¨ó+ÈÜ¥D™yHΩM¯Íà”ˆa`‘‡≥ΩjL·˜ç]€ˇ‘”v(0Û∞ﬂ°∏üU‡7qŸó@óhN†≤«’ƒ~8¸–Ñ}F˜ƒæ∏ìhè‡‹·h¯Â4¸˙µîQ7≠YEóeÜígQÒv8Úzùê–®GLµ§B
î
4à'¥ïíe Q√'Gdé5 î`R"É/ôOñ·E:IDìÍ≠ë’;
!µ}q#]âõ)2<»Q"©FCÒ“H˝“Âb¢Bµ92‰tÜr‰∂Qåï†¸Ó
9¯Ÿ≈r<,SS≈¶°[UIXÍBpU„S∂˜Wl˜ıÏ0c∑íÌ´¬\ˆÂ[eòµìbp›àª<ˆ‘∫hx;åÓ—E/˚#∏z6ãræz)ß ‹ZÏ	≥«*
¡6+äÄ9–Aä˙[ÓY&\Ou¿°áñ¯A,U>ßí&:Ôp◊`Î5:‹@5Ó¶âKŒxÚÁ	¬À&d¥àSJ§4™P\œ∂’"π^á¢6îÛò´D&ÍÁ}—¸nÑTF"ø√	≈O˚°˛ÁÑ [inI>€¢Ä–X◊3î∞?	=ø|äzBHÀõØë‘:€|ù∞TÃÔ∫kƒ?#vá–ß["®ƒZJéÈEpıUΩ≥¥‹?3¯ß€H≈,C§<1fU'ˆ≠â—®*‚å(Èå˙W.‹G[t¸ˆ	∫˛±/ˇ±œôéöß}ëœÒí›4œ˛m⁄Ö-.®ÎûÇÓüøEı≥QÏO:˙RsÑï:√=›á√Ã±ı!7êÌ g9Vy2¯»∞'\èC1lÁéDà1*∫yéç\!ÜVà©Ñîñ…(~6e/ó Ωu:¢ G`M“Ñ^ÔT;Â;#•Ÿ	9›ñ»ybI† 6ìm4Ö¿6EMŒ»o∂C˘S;‰µãïLr¬ëô≠∂˚PT?åÆ∑·˘œSQ‹0ıØ'S‘! ÔØöY—Âjƒãl“Â
Dîr#º«ñ(ë◊lMaˇIe„qà∆jŸM=Ê∏…Ò”ÏÏåü|Â8D(ŸÃòµÌö=2€DN˚<DñNBVÁx§å«6BK?lı±≈O∆	∆¡Ân¶ª‹"¨∫FJÌ¯ZÆ∆…9Ê-·üÁÇáπc‡ì1DJr!÷\∫∫ª¸∫å0%«ÕL[àå-}◊2Ä@†≈N˛z∆æıfX¡ü˜Ü:b≥óëÒ¡´Ø˝µÍpÓe9‹î‹dÏ33D÷LAˆ”9Øˇëú–™·àÆãò™	à(ÉîÍ…(ÍòÜí'S–ÒÀ,<˘u:j_~Ñ™gˇXÇ'?/ –Ü˙ß√ëQmblê—T…DÛ‚ü€ë’F|‹ìE±d¢´Õ—@xÓx?öü7àPmÉBö≠Ú.{∂Û@¥øüÑ~èßøŒFÔØÛQI™ŒÔ'µè√[I˜åˇóπ˘ˇ˛?≈˙ˇè«˘ˇÒ„øˇ˜?•…ô°Â}qïn‡òó#ñ“‚Ë]k\èÓøú°Ls∆√Ú)t‡√§˘1≥˜©ÒıN%P¿<méeß9é›wÑG¬äÜn∆ç°#üà„C∞ú‡1w/¡cüÛ˜€‡á#bÇ±8yµ∏>7Bø@VÂ§ÁﬂEJ÷]Ñ≈_Äw–~‹º≥Á/Ã«˛˝üb€Ó!ÿw÷	ßºùqÓ°3ˆ—o„˚Wù'$úêa	¡gÒ	BÕ°ønsÕ=*«ètÒãËæƒ‰Â≈«˘˝˛öÎ≥ò˚˝›æŸ.√◊€4¯rãümTa∆Næ„~.8d¬ÁT¯|ù_oV‡Û’x^ŒÜÀIˆ8*JYx ±éÇ∫ÈÆNZÇyJñ ÒÏ‡ôbèÀèå∏ß√EA	∂ÿ}ﬂí`#√Á‰ >g;éﬂ–„◊Ü∂+Ò≈nÊà}<ÕÄuö˚yAâ◊’bv{®Ë|t8ÊkN¸∑bm%ñﬁ:íBÏœGtÉYñ»l°Äuh§-´C¨≤≤B(]X#˝âbÎ-Òê‡^aÜåÓx ÍÌ‰È|Ì•â≤ÂÑñgˆë9◊YÌ.®y5ZZÍ˛®‹7Rî∏ú¶Ük≤
n…»Ñühäk·'
ä
≤Èûõ(T&èä.[‹NS#ÆAá¬◊£f#Bk¯}û@Çèﬂ#VñÈ‡[H¯ ∑Çg÷P‹NÑ3˛É1{õk0˜∞3˜òa⁄6]2áo⁄ ƒîıEB•%“˘ŸπZ=sFx©Æ<6«©.ß[·\≤%G[·J˙xú~Ù	~∏dèÈGeÿË%ä«∏ƒ\¨L=DJoQ&$’Æaz
Ô©¥BZÀ∂ã=Çr>B˘≥≈(y:	…µñHiPQÙ(¥*ƒWÎë’`K±pB~ªâ«¨FaØéÔ’RX`ö!±Váöﬁæh7uç⁄û˛˝hy5’]˝•	º•OF„F¸0,¶ôXzâÁ…y;≈kÁ#ÆÒ¸ªõeCc¢Öâ<2µÕ„~ZtÏcKiµïWÜ∑ìi>R4Ñ(kdt	2G"Å∂ÏâE®?˜c4⁄ﬁÕCÔ/ã_êJq h±óVÈ%÷B≈Û±ÑåO—Ò˙kÓﬂtT≥ˇÀ_B:m	>v8˙¿ÑWåXHìÛ˝-56òaK a”O‘GìcΩüHÍ(«&˛º+P)~=°∆˝Kä∫âÄÕÛ§j «‡PÓß.â ÛÏÉ#n%ÚhnQ8Sÿ&ëï¢™9«sÛ îuéFA≥®o≈∂r@aª=«öQÇ–∏W´U°@éÄM∂m5©©w(Z^O@ZMfãLÒ∂ôûÄ‰Ñ≤û»ju†	–„A¶QÖ
d‘ôÆ„∏}≈fè≈å-sœ—àúócÖá[ylbujD˘¥˝∫.           	ŒzáRáR	 œzáRDG    ..          	ŒzáRáR	 œzáR¨$    AE x e r c  ∞i c i o s     ˇˇˇˇEXERCI~1    ÷záRöR	 ◊záREG                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .           ÷záRáR	 ◊záREG    ..          ÷záRáR	 ◊záRDG    ÂE x e r c  ∞i c i o 1     ˇˇˇˇÂXERCI~1     ë˜záRáR  ¯záR      Bm l   ˇˇˇˇ ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  i c i o 1 .   h t EXERCI~1HTM  ë˜záRõR	 \|áRèC  Bm l   ˇˇˇˇ ·ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  ·i c i o 2 .   h t EXERCI~2HTM  +ª{áRõR	 ∞|áRéC9  Bm l   ˇˇˇˇ Aˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  Ai c i o 3 .   h t EXERCI~3HTM  ô∫|áRõR	 ÄáRçCM  Bm l   ˇˇˇˇ ¢ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  ¢i c i o 4 .   h t EXERCI~4HTM  ¥(ÄáRõR	 LñáRåCI  Bm l   ˇˇˇˇ Ûˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  Ûi c i o 5 .   h t EX22F8~1HTM   ‘ãáRõR	 ”∞àRt2A  Bm l   ˇˇˇˇ ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  i c i o 6 .   h t EX0226~1HTM  ïëáRõR	 ,ñáRãC^  Bm l   ˇˇˇˇ ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  i c i o 7 .   h t EX0981~1HTM  ¨ÌîáRõR	 €ñáRäCê  Bm l   ˇˇˇˇ ¨ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇE x e r c  ¨i c i o 8 .   h t EX2B8D~1HTM  îÌñáRõR	 ÓôáRâC/  Âl   ˇˇˇˇˇˇ ˛ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇÂP r o v a  ˛  -   2 . h   t m ÂROVA-~1HTM  ^TçRçR  TçR                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      write-file-atomic
-----------------

This is an extension for node's `fs.writeFile` that makes its operation
atomic and allows you set ownership (uid/gid of the file).

### var writeFileAtomic = require('write-file-atomic')<br>writeFileAtomic(filename, data, [options], [callback])

* filename **String**
* data **String** | **Buffer**
* options **Object** | **String**
  * chown **Object** default, uid & gid of existing file, if any
    * uid **Number**
    * gid **Number**
  * encoding **String** | **Null** default = 'utf8'
  * fsync **Boolean** default = true
  * mode **Number** default, from existing file, if any
  * tmpfileCreated **Function** called when the tmpfile is created
* callback **Function**

Atomically and asynchronously writes data to a file, replacing the file if it already
exists.  data can be a string or a buffer.

The file is initially named `filename + "." + murmurhex(__filename, process.pid, ++invocations)`.
Note that `require('worker_threads').threadId` is used in addition to `process.pid` if running inside of a worker thread.
If writeFile completes successfully then, if passed the **chown** option it will change
the ownership of the file. Finally it renames the file back to the filename you specified. If
it encounters errors at any of these steps it will attempt to unlink the temporary file and then
pass the error back to the caller.
If multiple writes are concurrently issued to the same file, the write operations are put into a queue and serialized in the order they were called, using Promises. Writes to different files are still executed in parallel.

If provided, the **chown** option requires both **uid** and **gid** properties or else
you'll get an error.  If **chown** is not specified it will default to using
the owner of the previous file.  To prevent chown from being ran you can
also pass `false`, in which case the file will be created with the current user's credentials.

If **mode** is not specified, it will default to using the permissions from
an existing file, if any.  Expicitly setting this to `false` remove this default, resulting
in a file created with the system default permissions.

If options is a String, it's assumed to be the **encoding** option. The **encoding** option is ignored if **data** is a buffer. It defaults to 'utf8'.

If the **fsync** option is **false**, writeFile will skip the final fsync call.

If the **tmpfileCreated** option is specified it will be called with the name of the tmpfile when created.

Example:

```javascript
writeFileAtomic('message.txt', 'Hello Node', {chown:{uid:100,gid:50}}, function (err) {
  if (err) throw err;
  console.log('It\'s saved!');
});
```

This function also supports async/await:

```javascript
(async () => {
  try {
    await writeFileAtomic('message.txt', 'Hello Node', {chown:{uid:100,gid:50}});
    console.log('It\'s saved!');
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
})();
```

### var writeFileAtomicSync = require('write-file-atomic').sync<br>writeFileAtomicSync(filename, data, [options])

The synchronous version of **writeFileAtomic**.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ÕîB$Ü€„Ü+ˆ0∑∂€tî‘R|É’¸≥R»
I"@íËáÒP»Ø–‹b:K6â≈,⁄∞î}á´é˚˙ıóΩ¬‚˘Ì”æˆ#õñ⁄¡”∫é”eYöŸ3{8e^;Át&ÏlÜÙ{¸‹¶÷ìS] ©"]“I†∑QFî{—¨5ù%õDc˜?±Ç√'∂S\‰îy”€T,qpˇ„+8ö%[˙äÃ„tÿÃ≠ÎÊî˘Ì,ò›â◊#ªÂÔßÄYz7©U‰XHÚIê`zÛâÚ0∞ÿtñlâ:∏Ô±—Ë3ñ6M´Î?tÛßGOß≠CŒ_©•îf·‹Nñ,hcﬁ¨.9rxtkâ≤MoaΩZCrœ©Œ1R $êﬁ Ÿÿ<TöŒíM¬yÙtFYäßîfŸ¢©O¸ÎÌœ„OüAOﬁ4
19˘yaN[“ÃÈKörmÇﬂT-FÛúﬁ zµöÌ¶√d) DoeıH„/#(qßáœ†©≠x‘Ôœ©ÌôÚ¯h{gz‰É≤≥Hç∫Í^V.kb—‹rtdUbÛÙH∞’tòl @Ëç\éÕ˝Ä|åL €V<‘Ú1` cˇmùÖ‹ı◊ïÑ¬Ú# íÀÂå±tQg,m§™<Á÷ı'Z!6èÈ-‹ {Lüº˚Mìﬁ¬uh˛ÑËìXﬂr*GNò{
  "_from": "write-file-atomic@^3.0.0",
  "_id": "write-file-atomic@3.0.3",
  "_inBundle": false,
  "_integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
  "_location": "/write-file-atomic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "write-file-atomic@^3.0.0",
    "name": "write-file-atomic",
    "escapedName": "write-file-atomic",
    "rawSpec": "^3.0.0",
    "saveSpec": null,
    "fetchSpec": "^3.0.0"
  },
  "_requiredBy": [
    "/configstore"
  ],
  "_resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
  "_shasum": "56bd5c5a5c70481cd19c571bd39ab965a5de56e8",
  "_spec": "write-file-atomic@^3.0.0",
  "_where": "D:\\Faculdade BandTec\\Pesquisa e Inova√ß√£o (PI)\\alfa-company\\site_institucional\\√Årea_do_Cliente_Responsiva\\node_modules\\configstore",
  "author": {
    "name": "Rebecca Turner",
    "email": "me@re-becca.org",
    "url": "http://re-becca.org"
  },
  "bugs": {
    "url": "https://github.com/npm/write-file-atomic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "imurmurhash": "^0.1.4",
    "is-typedarray": "^1.0.0",
    "signal-exit": "^3.0.2",
    "typedarray-to-buffer": "^3.1.5"
  },
  "deprecated": false,
  "description": "Write files in an atomic fashion w/configurable ownership",
  "devDependencies": {
    "mkdirp": "^0.5.1",
    "require-inject": "^1.4.4",
    "rimraf": "^2.6.3",
    "standard": "^14.3.1",
    "tap": "^14.10.6"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/npm/write-file-atomic",
  "keywords": [
    "writeFile",
    "atomic"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "write-file-atomic",
  "repository": {
    "type": "git",
    "url": "git://github.com/npm/write-file-atomic.git"
  },
  "scripts": {
    "lint": "standard",
    "postlint": "rimraf chowncopy good nochmod nochown nofsync nofsyncopt noopen norename \"norename nounlink\" nowrite",
    "posttest": "npm run lint",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "preversion": "npm test",
    "test": "tap"
  },
  "tap": {
    "100": true
  },
  "version": "3.0.3"
}
                                                                                                                                                                                                                                                                                                                      h~d:á8ﬁ—Ü2”Ños˙í&˘ÙoﬁèÙ2bftF ¿¢òa:Ñ8^CkâÈBàJiœo7C@5öoõè¥/ Ù&.AsõÈ‚x1€¢•≠»t!ƒàY5Ω‰ye«ø4Ò1Ωëu¶CL$≠ Ωç<?3ùCú¨µ£êòù÷/!r ‹:ŸÙ'≠X¸Lo#œtåÒ§˜Æ(_òé!N÷ÿRb:ÇòØœK^æè<_û</n∑ßÀâ”Ì¬·p`9,,e°î¬÷6⁄÷ƒ¢1¢—(—HÑp(L8f($‡$‡Dk”ˇW‚Ìj´˚LG«[HÑæj:»X“∂ Ÿ_9£Z»fMm≈¶#•((*†®§à¢“bäJä),-¶∞®êºæ¸<ÚÚ}xÛÚPVbgÜi[¯¸~˛AzËÌÍ°∑´áûŒn"aÈíNï¶#à)˛No‚.uªLGMZ zN‡êŸG-f+≠M205î¢§¨ò≤™J gîS^UAiEÖ•Eb9Ã¸à(K·Àœ«óüœò”sµf–†∑≥õû7äÇén:[;ËjÔ@€“Öê(EC∏ú1”1ƒ…(~°7pûZG⁄ù«úñ æ ¨4CåÆ´◊«P(=_:ô¨¥¢å™ô3(ØÆ†º™Ç≤™
 *Àp∫\¶£MçR‰Êì_òOÌºY«}+â–—“A{S+mÕ≠¥7µ“—‹N4övÔë°®PN¸KcgbÒy‡;¶Éú(Ìﬁ≈ı3Ã!∆◊MÁcìÒˇÈÀ/,†fˆLjfÕ§z‰ó◊Á5+eú.◊ˇˇÏôo~ÕéŸtwt“÷ÿJ„—£ßC&∂≈#?/l:Çè‚Î˙ÓQrÃtî∑Kª õoπÛNòÅ•˚Rî•ò9ªñ∫y≥©ô]KıÏ
ã
A…é-og9,*™´®®ÆbŸŸß‡ÔÛ”p¯áÜuw»˜£qª•˚?ÕÂ„[¿{Myª¥z“YÉ≈f”9ƒ¯~zÁ*˙˝R£çß¢∫ä9ßÃeŒ¬yÃö?∑◊m:RVÏ†·pıèr’ˆÀƒ7ﬁä5˚L«±Y´.fãÈoHõ }7,~`:á_øﬂ+çˇ(
KäòªhsÕcˆ¢π‰òéîïÚã
9ıå•úz∆R.◊–⁄–ƒÅWˆq‡ï˝t∑wöégå-{rdãˇ“ösî"-ŒjNõÄ|ô¯óˆöe˘ﬂõJ+ÀX|˙Rü∂Ñ™ö*È“O1•†fv-5≥kYª˛∫€;9∞w?_ŸOÛ±F”ÒRJÂ g≤ïè ø2“d@?Ga U¶≥àÒm›>ügwŒ5√ò≤ rüæÑ≈ß/•≤∫R˝4ÂÔÛ≥œ´Ï~˛%:Z≤¸∫Í^ﬁw˝N”1D|⁄q≥HùOøÈ ÈQ6Ü˘G§Òœ]=˘¶#§\Ye9ãœ˛§/ç~f((.‡Ã’ÁrÊÖÁ–⁄‘¬ÓÁ_‚µ]Ø ŒŸÚΩiΩ„¨8^a˛/”AåøìÈM,B±»–≈ŒπÂWwüGWoˆ Rú≤¸TVÆ>õYÛfK£ü"·˚vø∆ûÁw—x§¡túÑ˚ÏG6„qÀ>
"LåejMÜ0ﬂ†¯“¯gÑXÃ¢ßﬂg:FRÂp˙+9˝º3)(.4G$êÀÌb˘Ÿß±¸Ï”ËÓËb˜Ûªx˘ŸùÑCŸ—+–ﬁY»¨ô=¶cà¯∏q‡Fì!å~¨—πã«MfÒÎÍ…ÁW˜úg:FR‘Õõ≈ œa—äSq8dFuÆ
±sÎÏÿÚ"C¡†È8”≤˙Ï√\pÊQ”1ƒd(.Wkx“‹Ì—p‚‡%`ô©brˆÆ‚Å'óõéëPãV,f’ek®™≠6EÖxÈŸùº∏ÒY˛ÄÈ8SR[›«-◊Ô0CLŒ^búaÍú sC N>Ññ∆?ìd”¿YÊp—5óP3ª÷të‹Á^|g^x6ª_xôûﬁ∆@üÒI⁄ì“‘VÃ`–-€gñe8˘ páâ.           Ô ñRñR	  ñRHG    ..          Ô ñRñR	  ñRÊ    Ai n d e x  .. d . t s     ˇˇˇˇINDEXD~1TS   aÔ ñRõR	 ‡)ZIG  INDEX   JS  ±Ô ñRõR	 ‡)ZJG!  LICENSE     Ò ñRõR	 ‡)ZKGU  README  MD  <Ò ñRõR	 ‡)ZLG'  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  MÒ ñRõR	 IâàRMG@                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  declare const xdgBasedir: {
	/**
	Directory for user-specific data files.

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.data;
	//=> '/home/sindresorhus/.local/share'
	```
	*/
	readonly data?: string;

	/**
	Directory for user-specific configuration files.

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.config;
	//=> '/home/sindresorhus/.config'
	```
	*/
	readonly config?: string;

	/**
	Directory for user-specific non-essential data files.

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.cache;
	//=> '/home/sindresorhus/.cache'
	```
	*/
	readonly cache?: string;

	/**
	Directory for user-specific non-essential runtime files and other file objects (such as sockets, named pipes, etc).

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.runtime;
	//=> '/run/user/sindresorhus'
	```
	*/
	readonly runtime?: string;

	/**
	Preference-ordered array of base directories to search for data files in addition to `.data`.

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.dataDirs
	//=> ['/home/sindresorhus/.local/share', '/usr/local/share/', '/usr/share/']
	```
	*/
	readonly dataDirs: readonly string[];

	/**
	Preference-ordered array of base directories to search for configuration files in addition to `.config`.

	@example
	```js
	import xdgBasedir = require('xdg-basedir');

	xdgBasedir.configDirs;
	//=> ['/home/sindresorhus/.config', '/etc/xdg']
	```
	*/
	readonly configDirs: readonly string[];
};

export = xdgBasedir;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  lÖ^∆ŸÛcd∆øò¢ê b⁄˝øò¸ßπJGá¶¸\kiú]ﬂ-Ài≈îÖ-@ﬁÅ≈¥9¸è,ú‹íõ˙õ†KkÏ).ÖuÙˇgﬂ»'1M!-= "1¨‡ã∏∫˛Ï˛∏üc«B†e¸R‰ñ)uˇÎŒÓ‚?Ñå˘ã[() D‚®\ˇ*Rﬂ¥∆∂•S‰ñ… *÷ã´Îﬂ±ÜûOR"ëÉ¬JÜ Db©XÆŒ¡
<◊„ß3*D&“ì˙≤B;qu¸CBèÂ9e@$Öé‡Ï˝5vp±íè°Âc>‘éÖp§0ö&i;ä∂„ø∑8˚áÿÇt˘ã$êIÄ"π¨–\Ì_∑åé˙Y(rI<›ˇVp+Æˆ/c6#çøHíêY(íM·ËˇV`±¬wcÁù®„°\>3˘ÑH°Òñæ™k8˚˛àäJa"ë£¬Na)0E*®h+Œû¢˝≥àÂ_ãÌ;F:ˇÌXK
 ëÌ¥=jÄ⁄çc‡AT¯5°Dé
;—2 RKEpˆ˛=Ïºµÿæ±U-Z€(%ªSãÏeGáx£K_≈∫∞Ç€∞õQ—≥¡DÓ—2 R±^˛p¯@;k`∆ó ˇL”±ÑH|á+Vh*rﬂ∆(¬N`–t!T¥∫%Ä»^±~mˇ zÙ…∞B§X¿:MßÄ‡ki5ùBà‰ÿ$çøH'ùä.”)Ñ¶a‡)”!ÑHéÅ¶Òvù∂Ù à4“/Ä»B—.⁄m:ÖoQt ÄH/·£:l:Öâ5∞¥m:Öo±È¥∞d@§ŸF^”"›(∫,,ÈiF∆JE6â¥¿–>”)Ñ8û¢”",ÄH3ëVæb:Öâ14≤ﬁ_§ùiH&äl!=Z"ÖË≤‘*Ç@¿t!é34hŸ•Zd∏°}2©U§£Aµé°76^óa ë^ÏÈôØ˜~”	ÑM'¿ÄàÙ#oû"ÉÖC46Ì5Cà—t¡Äí ëÜB`HéGôiÀK≠¸€ì‡˜ªÆ"sôé#ƒ€Ω≠@#∞ãÙ$Ω "Cmﬁ’à÷∞Â»Jæπ·#¥ÙWòé$ƒ⁄‡≠!Ä£Êr1éÅç√ÛÑ» ØÈ¢£Á≠π’-˝¸«∆è|˝rÉ©Ñx”xk‡à—(BåEá°Ôa”)ÑòîM;O˙Z8Í‚éÌ◊ÒªùÎâƒúR	Ò¶∑ 1Èi¨˜d#ë)zÜÿs®cÃÔo=z:ﬂ‹¯a:¸•)L%ƒ€®·6ˇç9 “ “W§=¯¢ÈBƒeÛÆ&l{¸Çµ©Øäˇ‹ÙAö˙™RîJà∑±ﬁﬁ ç@Ã\!∆6Úqˇ3Ω¶c1!€÷<ÛrS\èÌÂÛ›ÕÔÁpwmíS	qúaö`§ PÎàF#	1ä√›µ¸€”ÂÒó,∫˙Ç¶„1Æù˚⁄ËåÀ@ƒÀm}ØµœKb*!éS?“ÊøŸ ≤@§ô-GVÚ›Õ†7Xàmk6ÌîU§∑ç£L˛õH8Í‚«€ﬁÕKÕß$!ë'Poµıo/ dÄHZ√}Ø\ÃÔw]EÃ~Î%∫yWÅ°à¡dBåÌ@Cz¶Ù‹®Ì‡ßœøÉÁé≠Hp*!N`ø’÷KÄH+Q€¡Øw\«£˚/8È{C·(OmØ7êJàâ=ºmzá˛h≠¯ﬂù◊∞ªeQÇ	1äQ{ d/ aÿPƒ√è∑›<Óf)∂◊3í˘™"ΩiÓ„ı£S˚ÙˇvZ+~˛¬çÈûôÄTBåjî Ÿ@‘,‡?7Ä◊⁄Áé˚∏¿Pî;•@§óá∑AÎƒÏUâ9˘Ò∂õi˜ó%‰zB«≠@ˆÜtä˘÷¶≈Ω&˙©Í	E§@§áÜ∂~^9îÿÛ‘¸·<~∏ÌfBæÑ^W"£ ”à#rXO∞êÔmπÖÓ@q‹œÒ√lû¬lk!í!ëü˛ﬂÆ√_ è∑›,'	äDÚè¥ı¿€
 •∞—Ï1ìI‰¢æ°˛kÀ-tñL˙πOºpåHÃN|(!&°π”œK˚€ìv˝£=5¸ÚÖ–Z%Ì"ßÏQä7ﬂ8≠„æ•§ ©1ÚÒ_[ﬂG€«9˚Cl})æ◊ÑHñG∂!	˛è≥ªeO8/π7π·Ñ˘÷	ﬂﬁù¬("GÜÛ¯Ø-∑L˚|Ù«ü;JLzÑ!Ì›vºﬁñí{›∑˜"é»ñ¡b˙ék„è/ ¥ "πBQ7?xÊΩ4ıWN˚Z=Cl€”<ÒÖHÇGû=2·°?âbkãüøpÅ∞7%˜YJèW X2 íGk≈€Ø£æß:a◊|LzÑùΩA^xµ5•˜ÏÛ€ùÎì>‰ ≤òÉWﬁ˛«„
 µÜÜO"·z}u¬˜;ÔÏNiˇu!¶„œ)<w5/f”ë≥R~_ëF⁄¯7ù8 dÄHÇùMßÚ◊◊V'Â⁄=sò¡†ú R„@C/ÌKﬁÃˇâ¸i˜•4ÙŒ0vë±Nj€O. d)†H∞Üﬁ¸z«µIª~`(¬É[%Ì˙BºAkÕ=OÓK ∫ˇxEmøﬁ~›qe	1°QV˘IÄH™Åêèü<˜.¬—‰nf≤Â•&Zªe+ë\œÓi°æm¿tö˙+yÍ‡π¶càÃGÄ-Ä'use strict';
const os = require('os');
const path = require('path');

const homeDirectory = os.homedir();
const {env} = process;

exports.data = env.XDG_DATA_HOME ||
	(homeDirectory ? path.join(homeDirectory, '.local', 'share') : undefined);

exports.config = env.XDG_CONFIG_HOME ||
	(homeDirectory ? path.join(homeDirectory, '.config') : undefined);

exports.cache = env.XDG_CACHE_HOME || (homeDirectory ? path.join(homeDirectory, '.cache') : undefined);

exports.runtime = env.XDG_RUNTIME_DIR || undefined;

exports.dataDirs = (env.XDG_DATA_DIRS || '/usr/local/share/:/usr/share/').split(':');

if (exports.data) {
	exports.dataDirs.unshift(exports.data);
}

exports.configDirs = (env.XDG_CONFIG_DIRS || '/etc/xdg').split(':');

if (exports.config) {
	exports.configDirs.unshift(exports.config);
}
                                                                                                                                                                                                                               Úò÷öˇ}d/Ì≤K`ŒÍÎÈ 08`:F“m9|ÜÈ"ıiª«ﬂ-√ ‚-œ◊Ø0!!ÜB1~zﬂÀD¢Ÿ1Û[ƒ/§ßß›tåîx°iôäïkT|mv|ÄÕc”
#≤F‘v∞£ÒT”1¶©›œùèæn:ÜH°h4Bg{CŒ,pÓPﬂ[c:ÜH•P|mv\ÄZG+∞kZÅDVxΩc.¡®«tåÑzˆïf∂æ‘d:ÜHç¶£µûX,∑z}^nYd:ÇHùùÍ2‚ö‡4ôE¢2 ÿ’¥ÿtÑ§∏Îâ◊ihÎ7C$YwG°PÓÌÒrÛ)¶#àTôƒê}¸Ä%@Æ”Z±'K◊Gb6?Ωw7Å°®È("I¸ΩÙÁÊÇ¶¶˛J:KL«©Á¯?L¶ à–;Ö8"K4ˆU— 7#i:{É¸Ù//ïMÇ≤ŒPpêÆéf”1å⁄›*√ 9†óœ«˚‡∏ µé(ƒî"â¨Z˚<”ín_}w<∞-”¶≥F(4D{kCŒˇõæ‹$@÷S<>“V«e≤E?0…«ã,≤ØcéÈ)±„ı6˛¯¯k¶cààDB¥∑≈∂sk“ﬂhtÕ&ˆöé!íIÛ‡d>π¿Õ@hRœY¡÷ä√]µ¶c§Ã¶]MtvÊ∆:ÒlçFhk:ñs3˛«bk≈ëûô¶cà‰	ç¥—qõT†ŒßYêìZ*≤n˘ﬂD˙{‰Ê§±LãEik>F41%≠Ìë˝ ≤ñÊ·ë6:nì?+Rq˜§ü#2ﬁ±Ó‹˚‰êÁu”Ÿ—B ê˝€≈f€é—÷RO$"ùï':&@ˆöB€<˘  É@Ó-§ÕqıΩ3LGH9ó”ÅÀa——⁄@h(h:éàÉ÷öˆ÷¬!˘˜Õ1Ÿ0[âÒ◊…>i“ÄZáxh≤œô≠©ø t#|>Zk⁄Zé…' –—÷¿Pp–tå¥’,†/X`:ÜHºáF⁄ÊIô| ÄñaÄ\”“_a:Ç>Ø•Üªï[õè	KêéÜ∑¯m»â”˝¶Kz≤–áÊßV Ò Á®Ê88œt#îR¯ÚÜ'?∆¢QZöéíÓÂ¥b€6mÕ«î≠ú„!Û ≤NÄº©ı O© PW2àö¸xÉ»L˛R”å*Ωµv⁄∂c¥5ìnÊ4ãFhm>"ˇìp¨∑⁄tëX™≥ßˆÅ|j=  6wM˘π"£tãMG0 ·∞»Û∫ﬂ¸Û,Ûc¸Úâ”§H$DK”Q¬9x∏œt4ÁËp^÷RSoãß^ ∏x&?È@dûÓ`ëÈ∆‰øÉö÷öˆˆ¸9z∏åi°° ≠MGàF√¶£dúû`1Q€a:ÜH?ùÍìß\ ®UQ≤5p.ËfÔ@Òr9x=Æ„ø®°≥£ôæﬁN3°rT0‡ßµ˘®Ï7EZCo∞–të˜´ULyR“‘{ Ü˝vöœ¿Úôéêä
GüŸ”’FOW[ä”‰&ˇ@/Ì≠ıhmõéí—zá§ »”jÉßW ¥P?≠kà¥7ëD ú«õ+N‘◊€Ig{SŒü8óLΩ=ÌÚwú ˝C“´óé±fz'ÙN´ P7~9ùkàÙ7…≠3 ∆STêáR£œ?–;“5˜iú"∂m”ﬁZOowáÈ(Y#Wóıfô_*≈¥∫¬¶; 1~”!“[(Êö¯A9¬≤ÖcøyÜÜ47f((€d$B8§πÒ†lì`È’Àt6N~5›ãLª PÎhûÓuD˙ä‰h0÷'˝¸<N«ÿ?:±hÑ∂ñ£Ù˜v%)YnËÔÎ¢•È—àúËóh·hn˛LgÕCjM”ΩÃÙ{  4?O»uDZäÈ1Z¬l7∆ˇ∂Rä‚¢Ò'Fj≠ÈÓj•Ω•^Ü&)ã“÷råÓŒ÷‘ç˜ÁÿºÇHÃi:Çò+1mnb
 õáÅÊÑ\Kàt1Nõ‡qª∆ú¯vÅ¿ ÕádÀåx˙˚h™?òÚø/(∑ñ∆Ïƒºı#öâÚH".îêWÅZGÕâ∏ñÈb¢Ö≈Öy8¨âÑﬁ¯D€ŸﬁåmÀtô—Dc⁄[ÎÈhkƒ∂Sﬂ˜J/ç»ä_©u$‰õ»2PVd)á ÕF+0¡ßB•%≈ÒÔë‡Ë°©·†l!¸v˙{ªhÆ7;—ØΩ'∑∂vXπ˘3ù4—ƒµµ	+ ‘EO‘ıD˙p9rÛ”QØ‚…g∑Î§mÇ«ãFhok†≠•>Á'∑in<DwW´Òûë∆é‹:ÊŸù£?”Y‡qµé£â∫X¢Çd2`Ú8s≥°Ú„Îä.Ã˜‚rMnoı``Ä¶ÜÙtµÈÚ6)	—ﬁZOkÛQ¬aÛüºm≠iÌŒµ@ŒP»P	mc;¥úË¢®JËuÖQ^gnΩ9æ°?ﬂß$•e≈ttıcOb6π÷öæﬁN¸ΩóVPX\ÜkÈAàF"Ùˆ¥„˜˜é;¡2’∫˚#ì˙wÀ˘nÛÖóò$M<ò»K&¥@-#¸(ë◊Ê˘rÙÕ¢g ˛ûá√¢¥dj€´∆bQ∫;[i<∂ü˛æÓ¨€Í6¢£Ωâ∆Ü¯z”™ÒËÏÀΩO√Ÿ®*˝h§çMòƒØâÒò˙ÈD"˝∏sÛü≥{ œòhÄÒƒ¢Q∫;[h<∂èæûéå¸¥µ£π·ÉΩiª÷˛ıÜ‹[¢Yíó{ˇœ.HÑü$˙¢	ﬂB≠£SoÊ◊¿ß}maFëg–t#¶Ú…0?œC$#ú˙∞I,£ßªùﬁûNÚä(,*√„ÕåΩ€c—(˛Åz2fí„ë÷ ê[Á]î˘˙LGì°πC]F¬∑MŒvPöÔ£¯$cÓ•&2Iâ/7˜aÔÏ°µFçµ'Jä|ƒlõPhz†÷6˛Å^¸Ω∏›^Úã…/,∆ÈHØm\m;F`pÄA¡†?Ì∫¯«3à“3¡óü;Ä«°–ùõE}Ü“ÿ|?NJ†.‚ÄﬁÃ˝¿ç…∏æH≠≤º‹\∑éh∫"îπ'˝‹≤‚|:{àD”çÓ¢ß´è'_~!yæ‹3=·pà`¿O00@h(ê±Ûéµ36˚TÕ(ÏÛúëÜ4˜©uL∆•ìπ!Ùwê +îÂÂnwaSghJÄRäÚíB∫zàD;ñ
	ÖÇÙt∑„p8ÒÊÂ„ÒÊ·Ò¯p{<(ïÿ©=∂m	
Ysæ¡±÷‹õW[$«*gòÔ$Î¬…+ ÷∞çÕ<á‚¸§›C§DIﬁ N+F‘û‹Z˜l–ÿ‰¥˘ÖSzÆe) KìSº!ã2ËÔc–?R§)ÖÀÈ∆ÂÒ‡r∫q∫\8.'ñÂ¿≤,î•ù”h≠—∂çm€ƒÏ(v4J4%âçÜâÑCD£ô1ñ?«⁄Ç	/ò“›Ï“V”D¸ûU±-YOZ†ZoÊª¿=…∫áHKi*zhÈØ0%ÂÍ€ß∑2E¿q¥&	â‰Êﬁì1∂iÎc9r´∞ùW&Á∂eêÔ&Û‚…-}[π8í‘{àî®.ÃÕ≥Ìè∂M|˚ç"¿ÂÃ≠Ü&›5t±mç«ÅNŸ¬„à0´Xz 2ƒaZπ/ô7HÍ+_›L¯^2Ô!RcfééÜb¥$`õXÀRTî‚vÀ9ÏÈb_˝Zxáï;ÖŸ¬ä9(Shæ7“Ü&MÚKﬂ w =IøèH™\û8t†11≈Ü'‡ı§◊2æ\§5Ï=6\ ‰“¿≤Í√¶#à¯Ù0ƒØì}ì§ ÍJ!9kEÍÃ.…›n√›G∑R)EYI¡§Nâw§%Ä?≈·pLzüáLvZı”D<4ﬂi;ì*5É_n~ tß‰^") }Ω9{&¿°¶ ÉCâÌâ+*»£§(_÷c≤ÁËpQÁp‰ŒêÃÏíV*Ú{M«Î∆√ß‚F)) ‘˘Ù£˘œT‹K$áR0Ø47g€ZÛ —ƒÔÜËÀsSQVÑ#á&°•[k^=:2˛ÔÃù‡‹Y{MGÒP|[ùOJv_K›;èÕèÄ‹HŒÛÀMIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                                                                                                                                                                                                                                                                                                                                                                                                                                           A)Ö•ñ•R2Y≤±3»˜Ó>íÚÌö≥Õπu{yœOêÔñ^î∫K≠ÂΩ¶Cº]˙ œ0áØy¶≥d™¡p˜ÌΩò≠GœêÕaRË=Îj∏pYôÈ9+jk˛ÛÆC9øÊ?Q§7 °Ç8X¢.$≠v§Jª @oÊÀ¿∑MÁ»4Z+û≠_¡_ˆ\Ç?,ıS™˘<ˇpÀ"äÚÕÌ∞ùÀÓ{¶çßw…¨ˇDìﬁÄ–|Y]ƒwL«8Qz p‚‡dB`‹:¸•¸ÔŒk9ÿYg:JN[6∑ÄO\;«tåú≥˚ ø|§^zºí§»3»áœ˛+Àf6%Ì$∆yji∑!EZ  z3g/ πsx˜hœ=É{v_F(&õ)¶ÉVÕ‡“3ec•TiÈ‚˚˜a(í´≥⁄Uß<ÀıÀ6ÁÙë‡ìCsé∫à]¶Éå&mœuUkŸ	|◊tét÷?îœˇ{Ó›¸n◊’“¯ßëø>◊Œ·ñ‹;{ﬁÑ¿Påü?‘ çä<∫ˇæª˘˝ÙeÀ∏hæìÆç?§q ÄﬁFQˆ LgI7/∑,‚w;◊32"ù8YIÅãøÔ|
º2 Y¥Üˇ˜‡Qˆ’öéísÚ›An=ÁAñœ8d:J:;àì”‘*“vÚDZ  z#Î∞x⁄tét1us˜ÓÀÿvÙt”QƒNùU¿ßÆüù∂gd∫{∑∂≤·•.”1r⁄ß<«K7·∞§Ê$6ó®ãŸ`:∆x2‚ùIo·hn3ù√¥Éùu¸z«utñòé"‚t≈Ÿï\{æqëhOø‘≈˝œ¥°e÷üqsKõ˘Ë9R%Gø›/‘Z>n:ƒD2• (≈Ê59π£ÕP‘Õ˝{/b„·≥eñsÜQJÒæu39iâÈ(Y„ôWz∏{Sã4˛iƒÌåÓO±zÓ.9XZQ,UkË1d"ÛO•7Û.‡”9RmOÎBÓ‹u•L∫…`KÒ…kÁ∞xvæÈ(o˚æ^~˚dì¬ijEıA>xÊ√ysz^∆ª‘Z˛l:D<2ß –(∂‡F”YRa ‰„Æó/g{„R”QDx›üÁ<fñ{MG…Xª´G∞•ıOkÓ <Î!NØ9`:JÍiÓUÒ”1‚ï1 ÄﬁL∞(7ù%ô∂7.·/]…†ÏÊóUJ
\¸›ªÁQî/K6'Î’c¸‚·F¢1ôlñ).Y"Ô:ÌÈ\⁄3†8M≠•≈têxeT †7spüÈ…µ¸iœ•l<tñÈ("I™À<|ˆ¶π‰…Ú¿xΩ∏Øè;üj"&¸dú•UG¯ÿy˜Â∆√ö‘E<`:∆dd\ †∑?h>a:G"ıã¯ŸÛ7q§{¶È("…j =|Ê¶π≤G@6æ‹≈Ω[[eÃ?ÉÕ(ËÊoW›√åÏ^%?j-ü2b≤2≥ xå|Úÿ,6ù%^mü«/_∏A∫¸s»Ã
/üπq.˘^ŸÈz,<€ŒS;;e∂πÜ¯¯y˜±§ÍàÈ(…∞g™≥…∏Ì?3≤  –[8Õs@∆~å“›øä^ΩH>·‰†∫
/∑ﬂ8ü«±µÊÆ-<˚j⁄Ø¢ì`)Õ{NúãÊÔ4%ë"¿˘#[◊gú¥=`"j;P¸£ÈS•µ‚Æ›Wpˇ^i¸sUcÁ?∫Ô¡¥;$Ãò¡°?∫Ôò4˛Y»÷ä?ºt%èÔ?ﬂtîD˙«Lm¸!É{  Ù›8®ÊI‡b”Y&#f[¸z«uºÿ K¸Tñ∏˘€ÎÁR^î€´ö;á¯Ÿ√t˜áMGI	[k¨›5ÁÜeõ∏zÒ6”1¶G±Å’\¶ªÃ!„_}z≥PÏJLgâG8Í‚g/‹ƒ+≠ræëxK°œ…ﬂ^?á⁄ä‹‹'‡ÂÉ˝¸Ó©&B9r™üø _æÀëª√?◊-Ÿ¬5K∂öé1U=hNW—`:»tdÏ¿‘E4†¯”9‚{˘¡3Ôï∆·pƒt#Q˛˚/G9ÿî[;®i=ﬂŒØk»ù∆¿O ÃÈ∆‡¡◊÷¿´k3sTÒâLo¸!
  µÜ{Ä_õŒ1û°®õ<Û^u’ôéí÷˙{zâEssL<éÒìé±cüÈ()—Îèﬂ˜Â±;2≥òÇAÄ∂ñVJ JLGIø~!ºvëÈìu«HõìÒ≤¢  ¿‚≥¿k¶cå&j;¯üÁﬁ…±û”Q“û◊óGsS+:G7}âƒ4øy¢âüÕÓìÓ^>ÿœ7ˇxàCÕπ”„imi!/œá€Ì6'm<Ú˙*∂9√tåxΩÜ≈ÁLáHî¨) ‘jàÒ`¿tñ∑≥µ‚éÌ◊Ûz˚\”Q2BAA>—hî∂÷V”Qå—ZÛƒéN~ˆpCY÷-â⁄‹µ°Ö_=÷H`(f:N áhijA€Z>˝è‚/]≈ﬁ∂˘¶cLd ãõ‘ÍÙjc¶#k
  µé◊—|ƒté7hwΩ|;O5%s(EIi	˛ÅA:;∫Lß1jÔëæwœa:˚≤cV¸¡¶Aæı«C<≥∑;´{7NÖiil∆∂m‹næ|üÈHi«÷äü=ç}U¶£åMÒaµö}¶c$RV  Í"˛ÇÊ[¶s <Ù˙j6>”tååS\RÑ√≤ËÌÓ°∑ª◊t£ZªC|Áû√Ï=íπ:C1Ó|™âﬁwåˆﬁÏ(f‚âÑijh"f˜‰TTVNîæBQ7?⁄v3Ω¡B”QN¶¯¶Z√Ω¶c$Z÷  ÿ¸#î…;OÂØØ≠1!cYñEiY) ùùÙ˜ˆNdV`(∆œÆÁÅg€±3lnƒˆ˝}|„˜yÓµﬁú˙‘çFi™o&Í»/»«Wêo8UzÎÚ„gﬂM(öVs$û§%s7ùO∆Ô0ΩôJ`0+’˜nÛóÒOﬂ PzΩà3ä÷6«◊Y0£fÖEi¯… ≈Ê◊‰Ò·+fQZòﬁõu˜áπkcØ’˚MG1"ã—x¨âHd∏«C)≈Ïy≥qπ“˚ﬂ-]ú?g9ÎØ¶c ‘„,µéN”Aí!;{  µñlﬁ	§¥œ1sÚ≥Áoí∆öî≤(Ø,Ûœm-m˙sg∆¯X∑˘÷≤Û@z.‘ûﬁ’…‹y(áõÊÜÊ7Ä“ÚRi¸'·πc+xæ~πÈ!,ﬁô≠ç?dq †.ÊE‡”©ºÁ^æÇ¶tû»íA
ã
…ÛΩuBbKs+Å¡å;p+·!õ_?÷»/m¿üFÁ4tÒùªqﬂ3mÑ¢Ÿµz!^√›˛ÑB°7øÊtπ(“ÒªÛ•+i˜óô†˘¥ZÕvsí/ká ﬁNoÊÁ¿«í}üm«N„7;ÆIˆmrJ8¶·X˝õ≈(KQ3≥FfRè»˜:xÁöjŒ^\b,√@  £/t# xdg-basedir [![Build Status](https://travis-ci.org/sindresorhus/xdg-basedir.svg?branch=master)](https://travis-ci.org/sindresorhus/xdg-basedir)

> Get [XDG Base Directory](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) paths


## Install

```
$ npm install xdg-basedir
```


## Usage

```js
const xdgBasedir = require('xdg-basedir');

xdgBasedir.data;
//=> '/home/sindresorhus/.local/share'

xdgBasedir.config;
//=> '/home/sindresorhus/.config'

xdgBasedir.dataDirs
//=> ['/home/sindresorhus/.local/share', '/usr/local/share/', '/usr/share/']
```


## API

The properties `.data`, `.config`, `.cache`, `.runtime` will return `null` in the uncommon case that both the XDG environment variable is not set and the users home directory can't be found. You need to handle this case. A common solution is to [fall back to a temp directory](https://github.com/yeoman/configstore/blob/b82690fc401318ad18dcd7d151a0003a4898a314/index.js#L15).

### .data

Directory for user-specific data files.

### .config

Directory for user-specific configuration files.

### .cache

Directory for user-specific non-essential data files.

### .runtime

Directory for user-specific non-essential runtime files and other file objects (such as sockets, named pipes, etc).

### .dataDirs

Preference-ordered array of base directories to search for data files in addition to `.data`.

### .configDirs

Preference-ordered array of base directories to search for configuration files in addition to `.config`.


## License

MIT ¬© [Sindre Sorhus](https://sindresorhus.com)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ﬁø•‘¥&.Íè6‡O¯ÿí≤í	óòäÙÏ±”ﬁæ$_’Zæm2O¶ê >˙c_∫ˇ‚fÔy t19EEÖ‘‘÷†¨âõç7ˆ{oil!ëmq≥â∂5ùÌù454gñ?3™gPQ)'KfäÅêèóõ|ù5¸ãÈ<ôB
Ä8)Ö˛»ˇzŸÍ9/=`:ãò_æè∫Yµqíû ÿ◊”ó‰d"ÇÅ «ËÌÈù±ßì⁄ŸµÀf_ôÊıéπ˜™µ¸KÆûÏ7R L“ø»kÊætß|0»,Øó∫Ÿuqüh€6Ì4÷7 ÊA*ç—÷“FSC·8ˆa»ÀÛ2kŒ,º^ôÈüiŒõµ˜û|Ó—wòŒëi§ òÇ|˛ë˜ØôøÎgñíB3ì∏›.ÍÊ‘·Ò∆?õ{(8D„±F:€;âM0aL§≠°ßªó˙#«‚ö”°î¢º≤ú⁄Ÿu2O#√XJ≥zŒÀø¯Ëó∏ŸtñL$¿Ωˇ3è~bÌ‹ùﬂwX“(dá√AÌ¨⁄IÌ·Æµ¶∑ßócáè—◊€7ÓzqaV0†·Ë1∫::'ú·‡rπ©õ]GiôÌùiú*∆⁄˘;øÛ¡/<¸q”Y2ï ”æœ=˛≈’Û_˙˙è§ÜXñEıÃj**«_ª";££≠ÉÜ£«=3J§X4•µπï¶Üf¬·¯ñs1kÓ‰zÑDz8"\ºh˚?ΩÔ3èŸtñL&¿4›r˚cˇ≤fÓKÔvLmπ0ß§¨Ñ∫Yµ8&ŸÌáinl¶π±Ö!ô`îm€twıpÏH}\K˚`x”°Í⁄™™´∞,yÃ4yÆ!}Ÿ‚?˚Óø}˙¶≥d:yı'¿{?˚¯Æû˜ÚÌGX˙Ü3å◊ó7<Òk
[ºi<⁄¿†0	…ƒxÏÿp√Ù1∫;ª–:æ°∏Ç¬fœõMAA~íäd(ÙÍ+øpÎı≥Èá¶≥d) ‰=∑?Ò„ãÓ¯`ëgP&dß”IÌ¨ZäJäßÙ¸©Ó (¶ÊÌøão¯ÕÂr2≥ÆÜÍô’8úŒâü “NI^ÏÍSû{Á’{ÊMg…R $–;>µÒ˜kÁÔº®™†G˙Ö3åRä™ï‘‘÷»L4◊”›çm«?Ô¶¥¨ÑŸÛf„ÀóO˝ô™2ø'ºfﬁŒµóﬁˆ¬Ω¶≥d) Ï∫Ol›∫j¡KßŒ+kÓ5ùEL^~A>≥ÁŒ¶∞H6Ç…tﬁ</≥ÊŒ¢º≤•‰≠.S’∑˜/Ø9∞‚⁄øyvõÈ,ŸF~*í‡Í[ü;∫§ˆ‡Ï•36ùELûÂp0£f’3ª|ú√‘böU’U‘ÕÆ√#'¯e¥≈ï«éû:ÛÿÏ˜ﬁ˛‘~”Y≤ë Ir√mœÙÑÓZtˆ¨ΩõLgSSPòœ‹y≥'µg¿xÅAZõZ˚ô÷˘√bTJYîUî1g˛ääãL«”t÷¨◊6ıGÓ\pÛ'ûî=πìDf√$—◊æÜ\¸˚ˇˇ¸ô£ß,fKΩïi,áÉÍô’¯¸t∂wNxêÃD¸˛A¸˛AãÇ¢"ää
‰Ú÷≥Z„–Ÿ—5≠ÀQVQ.Û7≤Ä”äq·‹ó~zÀgˇ§È,ŸN
Äxˇg˝¯]?éÓ€v‰¥oE=rä@*(,¿WêOw/››=qÌ27ûXÃ¶Øßóæû^‹nEE‰ÁÁ„Ò∫î8}im	¯ƒé≈(ò‚f<æ¸|*™ qª≥ˇÔ-∏zıúóøp”ß7˛¿tñ\ @äºÁ”O~ÁO?å|±i˘üzá
ÂcJ≤î¢§ºî¬í"∫:ªËÔÌO»u√·›ù]twv·t:Ò¯»œœ'œóó5’D"˛ Å¿ Å@mOoƒÁÀ£¥ºå<_^Ç
”™
∫#´fÔæÓÍøyˆ1”YrÖ )ÙÆœlºÔ°üÖœﬁ—∏tkS•¨I PáÉ™Uîîî–Ÿﬁô–kG£Q˙{˚áã•˘Ú˘ÚÊÂ·Ò∫3f6ªm€ÑÜBM|_ºjg’‚åÛTGëî7ı≠ö˚“y´?∏{üÈ,πD
ÄªÊo∂ΩtÔÓ∫í∂Åg˜∂Œ?’t1unèõô≥fíü¨]Â¥&08Ó‹è◊É«Î%œÎ≈Îı‡ÚòÔ˙~£±ÖB√ˇä{?˛©zΩD„‹ H§ø’_]7ˇ’Ûñ›º7æΩúE¬H`¿M∑nÏñ¸Ô˜Æ˘ıçÀ>µeD ìπR¯it∏Å—œƒhe)‹n.ßó€ÖÀÌ∆Â˛Ω3Å;ﬁŸ∂M4#âçFâF£D¬ë§7ˆ"{YJ≥≤ˆı?¸Õﬂ›˜~@ñ≈ ÄA˛‚CπÁ«°ß∑7ú˙+ô ¶B€ö–Pò'w±+K·t8q88úñÂ¿rX(ea©·esº1%UÉ≠5hõò≠—∂M,f7¯±(vL61âSËåùVs‡S˙¸#?7ù%óI`ÿª?˝‰oÓˇe˘◊m;“SSf:è»⁄÷DÏàúU “ Ï“÷Ó´ﬂ˚È'_3ù%◊e∆å¢,w√mœÏ;≠tÎÃïµ˚û5ùE$èeI'œâ,áÉí“™g÷òé"R‡¨YØ?≥HøP#çzêÄ4±˛≥Cpp’Ôˇ˚ o>l˘ﬂábnŸ/ À‰˘ºÃô;õ˛Å¸˝˛ú˝dnY˘êÁÀC)%¯d9ü+®œ{
  "_from": "xdg-basedir@^4.0.0",
  "_id": "xdg-basedir@4.0.0",
  "_inBundle": false,
  "_integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
  "_location": "/xdg-basedir",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "xdg-basedir@^4.0.0",
    "name": "xdg-basedir",
    "escapedName": "xdg-basedir",
    "rawSpec": "^4.0.0",
    "saveSpec": null,
    "fetchSpec": "^4.0.0"
  },
  "_requiredBy": [
    "/configstore",
    "/update-notifier"
  ],
  "_resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
  "_shasum": "4bc8d9984403696225ef83a1573cbbcb4e79db13",
  "_spec": "xdg-basedir@^4.0.0",
  "_where": "D:\\Faculdade BandTec\\Pesquisa e Inova√ß√£o (PI)\\alfa-company\\site_institucional\\√Årea_do_Cliente_Responsiva\\node_modules\\update-notifier",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/xdg-basedir/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Get XDG Base Directory paths",
  "devDependencies": {
    "ava": "^1.4.1",
    "import-fresh": "^3.0.0",
    "tsd": "^0.7.2",
    "xo": "^0.24.0"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "homepage": "https://github.com/sindresorhus/xdg-basedir#readme",
  "keywords": [
    "xdg",
    "base",
    "directory",
    "basedir",
    "path",
    "data",
    "config",
    "cache",
    "linux",
    "unix",
    "spec"
  ],
  "license": "MIT",
  "name": "xdg-basedir",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/xdg-basedir.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "4.0.0"
}
                                                                                                                                                                                                ø¯l¯'‡ü˛≈+€˙*æy®ªv]«`©ÃØ™†;2ø¨yCI°ˇn˙¯Ü¶ÛÒ) DZYˇ±gwWn¯ŒÅ%knØÔ©˘ÙæŒY¬Q∑tàå·sı‚äc˚gó¥˝ÿ_≤Ìˇ›|3≤ÑO§) DZZ˜5¢∞ÂøÄˇ∫ÛßWDÉ˘_m˜ó‹|¥gÊ¨HL^∂"˝8,õπ•Õçu%mø´ú—ıÕÀoﬁ—g:ì„ëwRëˆF!˙;‡ÔÓ˛’ö à?ˇ´me7ÈûY'{ìú*∆¨í∂÷≤Çﬁ˚U‘ÒçèÂ/ç¶3	/) DFπ˘£[:Ä/_zÏ'´™∫√_m,˜ëÆ⁄∫ê"ºŒÛ Z+Û{ˇÏ*
~ÛÊ[7 Òª"#I 2÷ïü⁄÷|¯‚sw.üq¨ª˙´-˝Ô8‹U;+ì9"q
={~y„ëôEùô]÷Ùügﬁ|∞√t&!¶K
 ëŒøÂï6xÂ¿~ÛüW‰[^«GÇ˘ÔkÎ/;£≈_ûg:ü»<•y˝°Ÿ%≠ª*zΩ¥≤ıée7ÔõŒ$D"I ≤Œáæ¸¯ √ë_‹˜√µ+büÓ
]Ÿ–[=€ ìMáƒIÚ]A][“—PÍÈ aÈˇ˘ˇ˙ÇÈLB$ì "Î›¯ôÕ{ÄOlˇÈYÆ&ÚoÈ,˛Põø¸úÜﬁÖ1[ÍÅ\‰qDò]⁄“WôﬂÛ|i~ˇÔfÍ‡œ˛ƒéàÈ\B§ä "ßåº¡ˇÔ»/û˙…µ-ëí€¸CyWtãñ∂ÙWî  ÇÏd)õ⁄‚Œæù/W‰˜<0ßº˘72ñ/rô "ß]˙©gõÄØè¸b€›‰5w˙ﬁÈÂ›–,8∑Õ_V€(vòM)¶¢ƒ;´ÃÔi)Úv∫=·áÅ‚{˛ˆˇ‹Ÿc:óÈB
 !ﬁf’ÕœÅﬂç¸Bk‘Sø>ÁÏÆ¡‚[zÉÖwJ5˜UÊGm©	“âœ5ƒÃ¢ŒÅr_ﬂ˛"œ‡¶í¸˛?^˙ë∑+Ö6ùMàt%Ä„n@^|xÒçØ=¯”≥|Cë¢ÀC⁄{È`–{∂W/Z
-.xºìÊü{(VÏÈÓ-Ú¯è{ü/…ÔxÈ¨ñ'≠?:ÓÅ∑
(DÜê@àI∫Ó;¿˝#øÄ{—Z´W6~ˇ¨Åà˙ é¬’ñª|û'FQAQ•3ﬂóo2n∆
Ò˜wDC¡ˆ~;“sTE˝œπ-œ›ﬂ˛˜ˇ‹¨îíOˆBLìlñ"D›}7érÁÌπÛÍÆ	E>∏=?ı‘FÚ*ÜÚ{ÉÖŒ\=˛X)(p∆
=¡¡Íä¢˛Âß]ÄÈ<Ëàv=[ƒÅ{ó]ıÎJaõŒ)D∂ Õw!“ƒÜ;.ˆˆÑÙ H‘yN8‚Y1s/Ñ=≥BQwÒP‘„DºÓ¡à«ëâß!∏±"Ô`®¿ÙÁ{Ç›^G∏—„ät9#{-€Ñ_9
Za@∆Ω©ëãÓΩ„‚íXàÖ±®s~Ã∂Êƒ¥≥6uŒ€é H‘U’éB[+wÃv8m€·åjÀãYéòv8¢⁄≤¢1ß≥V$ÊP1€°¢⁄Å√≤±îçC≈∞î≠ñ÷ñ≤µ•¥∂¨ò≠¿∂,€∂–∂•b∂«	{\ëê«ä]ÆhØ”äı8T¨√°Ï6•Ï∫1f9é∂E*én€jøÁû{‰\!“ÿˇÜ√Ë&”z    IENDÆB`Ç                                                                                                                                                                                                                                                         ˇ0ˇ*ˇ7!"ˇ?$%ˇ?(%ˇ9&!ˇ0 ˇ2 "ˇ:&%ˇ8.&ˇI96ˇQI@ˇZODˇUMEˇr\ZˇsfdˇÅl^ˇzvcˇÖtnˇyicˇhXˇqTJˇLDBˇbPEˇ}UPˇÇZXˇsQIˇ[85ˇC-(ˇU69ˇX<:ˇB-+ˇˇˇyzuˇˇ   ˇ_egˇ ˇ   ˇvÅˇˇ   ˇ  ˇ ˇˇ5:;ˇ                                                                                                                                                                                                                                                                                                                                  .           WÒ ñRñR	 Ú ñRNG    ..          WÒ ñRñR	 Ú ñRÊ    LICENSE     ™Ò ñRõR	 ‡)ZOG  INDEX   JS  4Ú ñRõR	 ‡)ZPGú	  README  MD  \Û ñRõR	 ‡)ZRGÕ  Ap a c k a  ‘g e . j s o   n   PACKAG~1JSO  lÛ ñRõR	 IâàRSG‚                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       